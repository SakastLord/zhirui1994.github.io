{"version":3,"sources":["pages/Index/style.module.scss","commons/config.js","commons/schemas.js","utils/getToken.js","services/github.js","models/repository.js","models/entities.js","models/index.js","services/serviceWorker.js","pages/Index/index.js","pages/Editor/index.js","pages/Article/index.js","pages/App.js","index.js","pages/Article/style.module.scss"],"names":["module","exports","container","header","navItem","active","articlesContainer","article","articleTitle","articleInfo","articleCategory","articleLabel","config","owner","repo","token","milestone","schema","Entity","label","comment","issue","labels","nodes","comments","repository","issues","milestones","getToken","secret","atob","regexp","RegExp","concat","replace","initIndex","services_github_initIndex","apply","this","arguments","_callee","regenerator_default","a","wrap","_context","prev","next","abrupt","axios","post","query","headers","Authorization","then","response","normalize","data","stop","getSingleIssue","_x","services_github_getSingleIssue","_callee2","number","_context2","object","require","models_repository","name","state","result","reducers","update","payload","merge","effects","dispatch","_initIndex","Object","asyncToGenerator","mark","githubServices","sent","entities","_getSingleIssue","closeCurrentIssue","_closeCurrentIssue","_callee3","_","rootState","currentRepository","newEntities","_context3","repositories","undefined","defineProperty","_x2","_x3","models","Boolean","window","location","hostname","match","DEFAULT_MILESTONE","title","id","DEFAULT_ISSUES_OBJ","pageInfo","totalCount","IndexPage","_this","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","activeMilestone","props","_this$props","issuesList","milestonesList","milestonesMap","labelsMap","react_default","createElement","className","styles","map","key","classNames","NavLink","to","aria-hidden","moment","createdAt","format","style","background","color","Component","mapState","createSelector","store","repositoriesMap","issuesMap","keys","unshift","issuesObj","connect","EditorPage","_getPrototypeOf2","handleSubmit","bind","assertThisInitialized","e","preventDefault","body","create","value","_this2","htmlFor","ref","input","type","textarea","cols","rows","onClick","ArticlePage","params","_this$props2","currentIssue","articleBody","dangerouslySetInnerHTML","__html","bodyHTML","issueID","routerConfig","path","exact","component","withRouter","App","BrowserRouter","Switch","route","Route","__webpack_require__","d","__webpack_exports__","init","ReactDOM","render","es","pages_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.58dbdfd0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__1CTEx\",\"header\":\"style_header__1VHED\",\"navItem\":\"style_navItem__36neS\",\"active\":\"style_active__3WdfJ\",\"articlesContainer\":\"style_articlesContainer__2rKNV\",\"article\":\"style_article__g0wxV\",\"articleTitle\":\"style_articleTitle__17Rw5\",\"articleInfo\":\"style_articleInfo__3Tym_\",\"articleCategory\":\"style_articleCategory__f0xgF\",\"articleLabel\":\"style_articleLabel__19l4_\"};","export default {\n    owner: 'zhirui1994',\n    repo: 'zhirui1994.github.io',\n    token: \"MSt6aGlydWkxOTk0KzBhOGZmMjAwNWM3M2NmNmM1YzEzYWQyZmRkZjhjN2E4MDU0NzdlK3poaXJ1aTE5OTQuZ2l0aHViLmlvKzg=\"\n}","import { schema } from 'normalizr';\n\nexport const milestone = new schema.Entity('milestones');\nexport const label = new schema.Entity('labels');\nexport const comment = new schema.Entity('comments');\nexport const issue = new schema.Entity('issues', {\n    milestone: milestone,\n    labels: {\n        nodes: [label]\n    },\n    comments: {\n        nodes:[comment]\n    },\n});\nexport const repository = new schema.Entity('repositories', {\n    issue,\n    issues: {\n        nodes: [issue]\n    },\n    labels: {\n        nodes: [label]\n    },\n    milestones: {\n        nodes: [milestone]\n    },\n})","import config from '../commons/config';\n\nexport default function getToken() {\n    const secret = atob(config.token);\n    const regexp = new RegExp(`(\\\\+${config.owner}\\\\+|\\\\+${config.repo}\\\\+)`,'g');\n    const token = secret.replace(regexp,'');\n    return token;\n}","import axios from 'axios';\nimport { normalize } from 'normalizr';\nimport config from '../commons/config';\nimport { repository } from '../commons/schemas';\nimport getToken from '../utils/getToken';\n\nexport async function initIndex() {\n    return axios.post(\n        'https://api.github.com/graphql',\n        {\n            query: `query { \n                repository(owner: \"${config.owner}\", name: \"${config.repo}\") {\n                    id,\n                    labels(first: 100) {\n                        nodes {\n                            id,\n                            name,\n                            color,\n                        } \n                    },\n                    milestones(first:100) {\n                        nodes {\n                            id,\n                            number,\n                            state,\n                            title,\n                        }\n                    },\n                    issues(last:20, states:OPEN) {\n                        pageInfo {\n                            endCursor,\n                            startCursor,\n                            hasNextPage,\n                            hasPreviousPage\n                        },\n                        totalCount,\n                        nodes {\n                            id,\n                            title,\n                            number,\n                            createdAt,\n                            milestone {\n                                id\n                            },\n                            labels(first:100) {\n                                nodes {\n                                    id,\n                                }\n                            }\n                        }\n                    }\n                }\n            }`\n        },\n        {\n            headers: {\n                Authorization: `bearer ${getToken()}`\n            },\n        }\n    ).then(response => {\n        return normalize(response.data.data.repository, repository);\n    });\n}\n\nexport async function getSingleIssue(number) {\n    return axios.post(\n        'https://api.github.com/graphql',\n        {\n            query: `query { \n                repository(owner: \"${config.owner}\", name: \"${config.repo}\") {\n                    id,\n                    issue(number: ${number}) {\n                        id,\n                        title,\n                        number,\n                        bodyHTML,\n                        createdAt,\n                        milestone {\n                            id,\n                            number,\n                            state,\n                            title,\n                        },\n                        labels(first:100) {\n                            nodes {\n                                id,\n                                name,\n                                color,\n                            }\n                        },\n                        comments(last: 20) {\n                            nodes {\n                                id,\n                                author {\n                                    avatarUrl,\n                                    login,\n                                    url,\n                                },\n                                bodyHTML,\n                                createdAt,\n                            }\n                        }\n                    }\n                }\n            }`\n        },\n        {\n            headers: {\n                Authorization: `bearer ${getToken()}`\n            },\n        }\n    ).then(response => {\n        return normalize(response.data.data.repository, repository);\n    })\n}","import * as githubServices from '../services/github'\n\nconst object = require('lodash/fp/object');\n\nexport default {\n    name: 'repository',\n    state: {\n        result: '',\n    },\n    reducers: {\n        update(state, payload) {\n            return object.merge(state, payload);\n        }\n    },\n    effects: (dispatch) => ({\n        async initIndex() {\n            const response = await githubServices.initIndex()\n            if (response) {\n                await dispatch.entities.update(response.entities);\n                await dispatch.repository.update({\n                    result: response.result\n                });\n            }\n        },\n        async getSingleIssue(number) {\n            const response = await githubServices.getSingleIssue(number)\n            if (response) {\n                await dispatch.entities.update(response.entities);\n                await dispatch.repository.update({\n                    result: response.result,\n                })\n            }\n        },\n        async closeCurrentIssue(_, rootState) {\n            const result = rootState.repository.result;\n            const currentRepository = rootState.entities.repositories[result];\n            if (currentRepository) {\n                currentRepository.issue = undefined;\n                const newEntities = {\n                    repositories: {\n                        [result]: currentRepository\n                    }\n                };\n                await dispatch.entities.update(newEntities);\n            }\n        }\n    })\n}","const object = require('lodash/fp/object');\n\nexport default {\n    name: 'entities',\n    state: {\n        repositories: {},\n        issues: {},\n        labels: {},\n        milestones: {},\n        comments: {},\n    },\n    reducers: {\n        update(state, payload) {\n            return object.merge(state, payload)\n        },\n    }\n}","import repository from './repository';\nimport entities from './entities';\n\nexport default {\n    entities,\n    repository,\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { createSelector } from 'reselect';\nimport { NavLink } from 'react-router-dom';\nimport styles from './style.module.scss'\n\nconst DEFAULT_MILESTONE = {\n    title: '最新',\n    id: 'default_milestone'\n}\nconst DEFAULT_ISSUES_OBJ = {\n    nodes: [],\n    pageInfo: {\n\n    },\n    totalCount: 0,\n}\n\nclass IndexPage extends Component {\n    constructor(...args) {\n        super(args);\n        this.state = {\n            activeMilestone: DEFAULT_MILESTONE\n        }\n    }\n\n    componentDidMount() {\n        const { dispatch } = this.props;\n        dispatch.repository.initIndex();\n    }\n\n    render() {\n        const { activeMilestone } = this.state;\n        const {\n            issuesList,\n            milestonesList,\n            milestonesMap,\n            labelsMap,\n        } = this.props;\n        return (\n        <div className={styles.container}>\n            <header className={styles.header}>\n            <nav>\n                {milestonesList.map(milestone => {\n                    return (\n                        <span\n                            key={milestone.id}\n                            className={classNames(\n                                styles.navItem,\n                                {\n                                    [styles.active]:\n                                        milestone.title === activeMilestone.title,\n                                },\n                            )}\n                        >\n                            {milestone.title}\n                        </span>\n                    )\n                })}\n            </nav>\n            </header>\n            <main className={styles.articlesContainer}>\n                {issuesList.map(issue => {\n                    return (\n                        <article className={styles.article} key={issue.id}>\n                            <NavLink to={`/article/${issue.number}`}>\n                                <h3 className={styles.articleTitle}>{issue.title}</h3>\n                            </NavLink>\n                            <p className={styles.articleInfo}>\n                                <span>\n                                    <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                                    {moment(issue.createdAt).format('YYYY-MM-DD')}\n                                </span>\n                                <span>\n                                    <i className=\"fa fa-th-list\" aria-hidden=\"true\"></i>\n                                    <span className={styles.articleCategory}>{milestonesMap[issue.milestone].title}</span>\n                                </span>\n                                <span>\n                                    <i className=\"fa fa-tags\" aria-hidden=\"true\"></i>\n                                    {issue.labels.nodes.map(id => {\n                                        const label = labelsMap[id]\n                                        return (\n                                            <span\n                                                key={label.id}\n                                                className={styles.articleLabel}\n                                                style={{\n                                                    background: `#${label.color}`,\n                                                }}\n                                            >\n                                                {label.name}\n                                            </span>\n                                        )\n                                    })}\n                                </span>\n                            </p>\n                        </article>\n                    )\n                })}\n            </main>\n        </div>\n        );\n    }\n}\n\nconst mapState = createSelector(\n    [\n        store => store.repository.result,\n        store => store.entities.repositories,\n        store => store.entities.issues,\n        store => store.entities.milestones,\n        store => store.entities.labels,\n    ],\n    (\n        result,\n        repositoriesMap,\n        issuesMap,\n        milestonesMap,\n        labelsMap,\n    ) => {\n        const repository = repositoriesMap[result];\n        const milestonesList = Object.keys(milestonesMap).map(id => milestonesMap[id]);\n        if (milestonesList.length) {\n            milestonesList.unshift(DEFAULT_MILESTONE);\n        }\n        let issuesObj = DEFAULT_ISSUES_OBJ;\n        if (repository) {\n            issuesObj = repository.issues;\n        }\n        return {\n            labelsMap,\n            milestonesMap,\n            milestonesList,\n            issuesList: issuesObj.nodes.map(id => issuesMap[id]),\n            pageInfo: issuesObj.pageInfo,\n            totalCount: issuesObj.totalCount,\n        }\n    }\n)\n\nexport default connect(mapState)(IndexPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass EditorPage extends Component {\n    constructor(...args){\n        super(...args);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const { dispatch } = this.props;\n        if (this.title && this.body) {\n            dispatch.issues.create({\n                title: this.title.value,\n                body: this.body.value,\n            })\n        }\n    }\n\n    render() {\n        return (\n        <div className=\"Editor\">\n            <header className=\"App-header\">\n                文章编辑页！\n            </header>\n            <form>\n                <label htmlFor=\"title\">标题：<input ref={input => this.title = input} type=\"text\" id=\"title\" /></label>\n                <label htmlFor=\"body\">内容：<textarea ref={textarea => this.body = textarea} cols=\"60\" rows=\"5\" id=\"body\" /></label>\n                <input onClick={this.handleSubmit} type=\"submit\" value=\"创建\" />\n            </form>\n        </div>\n        );\n    }\n}\n\nexport default connect()(EditorPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport { createSelector } from 'reselect';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport styles from './style.module.scss';\n\nclass ArticlePage extends Component {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        const number = match.params.number;\n        dispatch.repository.getSingleIssue(number);\n    }\n\n    componentWillUnmount() {\n        const { dispatch } = this.props;\n        dispatch.repository.closeCurrentIssue();\n    }\n\n    render() {\n        const { currentIssue, labelsMap, milestonesMap } = this.props;\n        return (\n            <div className={styles.container}>\n                <header>\n                    <h1>{currentIssue.title}</h1>\n                    <p className={styles.articleInfo}>\n                        <span>\n                            <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                            {moment(currentIssue.createdAt).format('YYYY-MM-DD')}\n                        </span>\n                        <span>\n                            <i className=\"fa fa-th-list\" aria-hidden=\"true\"></i>\n                            <span className={styles.articleCategory}>\n                                {currentIssue.milestone && milestonesMap[currentIssue.milestone].title}\n                            </span>\n                        </span>\n                        <span>\n                            <i className=\"fa fa-tags\" aria-hidden=\"true\"></i>\n                            {currentIssue.labels && currentIssue.labels.nodes.map(id => {\n                                const label = labelsMap[id]\n                                return (\n                                    <span\n                                        key={label.id}\n                                        className={styles.articleLabel}\n                                        style={{\n                                            background: `#${label.color}`,\n                                        }}\n                                    >\n                                        {label.name}\n                                    </span>\n                                )\n                            })}\n                        </span>\n                    </p>\n                </header>\n                <main>\n                    <article\n                        className={classNames(styles.articleBody, 'markdown-body')}\n                        dangerouslySetInnerHTML={{ __html: currentIssue.bodyHTML }}\n                    ></article>\n                </main>\n            </div>\n        );\n    }\n}\n\nconst mapState = createSelector(\n    [\n        store => store.repository.result,\n        store => store.entities.repositories,\n        store => store.entities.issues,\n        store => store.entities.milestones,\n        store => store.entities.labels,\n    ],\n    (\n        result,\n        repositoriesMap,\n        issuesMap,\n        milestonesMap,\n        labelsMap,\n    ) => {\n        let issueID, currentIssue = {};\n        const repository = repositoriesMap[result];\n        if (repository) {\n            issueID = repository.issue;\n        }\n        if (issueID) {\n            currentIssue = issuesMap[issueID];\n        }\n        return {\n            currentIssue,\n            milestonesMap,\n            labelsMap,\n        };\n    }\n)\n\n\nexport default  connect(mapState)(withRouter(ArticlePage));","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport IndexPage from './Index';\nimport EditorPage from './Editor';\nimport ArticlePage from './Article';\n\nconst routerConfig = [\n    {\n        path: '/',\n        exact: true,\n        component: IndexPage,\n    },\n    {\n        path: '/editor',\n        exact: true,\n        component: EditorPage,\n    },\n    {\n        path: '/article/:number',\n        exact: true,\n        component: ArticlePage,\n    }\n];\n\nconst App = () => {\n    return (\n        <Router>\n            <Switch>\n                {routerConfig.map(route =>\n                    (<Route\n                        key={route.path}\n                        path={route.path}\n                        exact={route.exact}\n                        component={route.component}\n                    />)\n                )}\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { init } from '@rematch/core';\nimport { Provider } from 'react-redux';\nimport models from './models/index';\nimport * as serviceWorker from './services/serviceWorker';\nimport App from './pages/App';\nimport './styles/index.scss';\n\nexport const store = init({\n    models,\n}) \n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__vgro-\",\"articleInfo\":\"style_articleInfo__3N387\",\"articleCategory\":\"style_articleCategory__2Yp5u\",\"articleLabel\":\"style_articleLabel__EAk0-\",\"articleBody\":\"style_articleBody__nw0TM\"};"],"sourceRoot":""}