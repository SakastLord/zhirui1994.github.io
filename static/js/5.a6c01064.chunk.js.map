{"version":3,"sources":["pages/Article/style.module.scss","pages/Article/github.svg","pages/Article/index.js"],"names":["module","exports","container","langing","articleInfo","articleCategory","articleLabel","issueCommentsContainer","issueComment","commentorAvatar","issueCommentHeader","issueCommentContent","createCommentContainer","createComment","createCommentAvatar","createCommentHeader","commentSwitch","active","commentorLogin","createCommentInputContainer","createCommentTextarea","createCommentOperator","articleBody","__webpack_require__","p","ArticlePage","handleInput","e","preventDefault","currentTarget","style","height","scrollTop","scrollHeight","handleSubmitComment","content","_this","comment","value","_this$props","props","dispatch","currentIssue","user","addComment","id","callback","handleBack","history","goBack","_this$props2","this","number","match","params","getAuthToken","repository","getSingleIssue","closeCurrentIssue","_this2","_this$props3","loading","labelsMap","commentsMap","milestonesMap","viewer","isUserLoading","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_5__","className","styles","onClick","_components_Loading__WEBPACK_IMPORTED_MODULE_11__","title","aria-hidden","moment","createdAt","format","milestone","labels","nodes","map","label","key","background","concat","color","name","classNames","dangerouslySetInnerHTML","__html","bodyHTML","comments","author","href","url","src","avatarUrl","alt","login","getLoginAuthLink","githubIconUrl","ref","textarea","onInput","placeholder","Component","mapState","createSelector","store","result","entities","repositories","issues","milestones","repositoriesMap","issuesMap","issueID","issue","connect","withRouter"],"mappings":"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","file":"static/js/5.a6c01064.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__vgro-\",\"langing\":\"style_langing__bY9z6\",\"articleInfo\":\"style_articleInfo__3N387\",\"articleCategory\":\"style_articleCategory__2Yp5u\",\"articleLabel\":\"style_articleLabel__EAk0-\",\"issueCommentsContainer\":\"style_issueCommentsContainer__31mga\",\"issueComment\":\"style_issueComment__14LFL\",\"commentorAvatar\":\"style_commentorAvatar__vjQHI\",\"issueCommentHeader\":\"style_issueCommentHeader__D6cu-\",\"issueCommentContent\":\"style_issueCommentContent__cd6g6\",\"createCommentContainer\":\"style_createCommentContainer__1xO-G\",\"createComment\":\"style_createComment__KcpwS\",\"createCommentAvatar\":\"style_createCommentAvatar__1l2eW\",\"createCommentHeader\":\"style_createCommentHeader__3AxDl\",\"commentSwitch\":\"style_commentSwitch__3295I\",\"active\":\"style_active__1xMn4\",\"commentorLogin\":\"style_commentorLogin__1EBPS\",\"createCommentInputContainer\":\"style_createCommentInputContainer__2CEda\",\"createCommentTextarea\":\"style_createCommentTextarea__2i0zE\",\"createCommentOperator\":\"style_createCommentOperator__2AZGN\",\"articleBody\":\"style_articleBody__nw0TM\"};","module.exports = __webpack_public_path__ + \"static/media/github.c9e82c1f.svg\";","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport { createSelector } from 'reselect';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport Loading from '../../components/Loading';\nimport { getLoginAuthLink } from '../../services/github';\nimport styles from './style.module.scss';\nimport githubIconUrl from './github.svg';\n\nclass ArticlePage extends Component {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        const number = match.params.number;\n        dispatch.user.getAuthToken();\n        dispatch.repository.getSingleIssue(number);\n    }\n\n    componentWillUnmount() {\n        const { dispatch } = this.props;\n        dispatch.repository.closeCurrentIssue();\n    }\n\n    handleInput = (e) => {\n        e.preventDefault();\n        const { currentTarget } = e;\n        currentTarget.style.height = 'auto';\n        currentTarget.style.height = currentTarget.scrollTop + currentTarget.scrollHeight + 'px';\n    }\n\n    handleSubmitComment = (e) => {\n        e.preventDefault();\n        const content = this.comment.value;\n        if (content) {\n            const { dispatch, currentIssue } = this.props;\n            dispatch.user.addComment({id: currentIssue.id, content, callback: () => {\n                this.comment.value = '';\n            }});\n        }\n    }\n\n    handleBack = () => {\n        this.props.history.goBack();\n    }\n\n    render() {\n        const {\n            loading,\n            labelsMap,\n            commentsMap,\n            currentIssue,\n            milestonesMap,\n            viewer,\n            isUserLoading,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <div className={styles.langing}>\n                    <i onClick={this.handleBack} className=\"fa fa-chevron-left\"></i>\n                    <p>\n                        文章详情\n                    </p>\n                </div>\n                <Loading loading={loading}>\n                    <div className={styles.container}>\n                        <header>\n                            <h1>{currentIssue.title}</h1>\n                            <p className={styles.articleInfo}>\n                                <span>\n                                    <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                                    {moment(currentIssue.createdAt).format('YYYY-MM-DD')}\n                                </span>\n                                <span>\n                                    <i className=\"fa fa-th-list\" aria-hidden=\"true\"></i>\n                                    <span className={styles.articleCategory}>\n                                        {currentIssue.milestone && milestonesMap[currentIssue.milestone].title}\n                                    </span>\n                                </span>\n                                <span>\n                                    <i className=\"fa fa-tags\" aria-hidden=\"true\"></i>\n                                    {currentIssue.labels && currentIssue.labels.nodes.map(id => {\n                                        const label = labelsMap[id]\n                                        return (\n                                            <span\n                                                key={label.id}\n                                                className={styles.articleLabel}\n                                                style={{\n                                                    background: `#${label.color}`,\n                                                }}\n                                            >\n                                                {label.name}\n                                            </span>\n                                        )\n                                    })}\n                                </span>\n                            </p>\n                        </header>\n                        <main>\n                            <article\n                                className={classNames(styles.articleBody, 'markdown-body')}\n                                dangerouslySetInnerHTML={{ __html: currentIssue.bodyHTML }}\n                            ></article>\n                            <div className={styles.issueCommentsContainer}>\n                                {currentIssue.comments && currentIssue.comments.nodes.map(id => {\n                                    const comment = commentsMap[id];\n                                    if (comment) {\n                                        const { author } = comment;\n                                        return (\n                                            <section key={comment.id} className={styles.issueComment}>\n                                                <a className={styles.commentorAvatar} href={author.url}>\n                                                    <img src={author.avatarUrl} alt=\"This is commentor's avatar\" />\n                                                </a>\n                                                <p className={styles.issueCommentHeader}>\n                                                    <a href={author.url}><em>{author.login}</em></a>\n                                                    <span>{moment(comment.createdAt).format('YYYY-MM-DD HH:mm:ss')}</span>\n                                                </p>\n                                                <article\n                                                    className={classNames(styles.issueCommentContent, 'markdown-body')}\n                                                    dangerouslySetInnerHTML={{ __html: comment.bodyHTML}}\n                                                ></article>\n                                            </section>\n                                        );\n                                    } else {\n                                        return null;\n                                    }\n                                })}\n                                <section className={styles.createCommentContainer}>\n                                    <div className={styles.createComment} >\n                                        {viewer.id ?\n                                            (<div className={styles.createCommentAvatar}>\n                                                <img src={viewer.avatarUrl} alt=\"This is commentor's avatar\" />\n                                            </div>) :\n                                            (<a\n                                                className={styles.createCommentAvatar}\n                                                href={getLoginAuthLink()}\n                                            >\n                                                {isUserLoading ? \n                                                    <i className=\"fa fa-refresh fa-spin fa-3x fa-fw\"></i>\n                                                    :\n                                                    <img src={githubIconUrl} alt=\"This is commentor's avatar\" />\n                                                }\n                                            </a>)\n                                        }\n                                        <div className={styles.createCommentHeader}>\n                                            <span className={classNames(styles.commentSwitch, styles.active)} >编辑</span>\n                                            <span className={styles.commentSwitch} >预览</span>\n                                            {(!viewer.id && !isUserLoading) && (\n                                                <span className={styles.commentorLogin} ><a href={getLoginAuthLink()}>登陆</a></span>\n                                            )}\n                                        </div>\n                                        <div className={styles.createCommentInputContainer}>\n                                            <textarea ref={textarea => this.comment = textarea} onInput={this.handleInput} className={styles.createCommentTextarea} placeholder=\"请编辑您的评论\"></textarea>\n                                        </div>\n                                        <div className={styles.createCommentOperator}>\n                                            <button onClick={this.handleSubmitComment} >评论</button>\n                                        </div>\n                                    </div>\n                                </section>\n                            </div>\n                        </main>\n                    </div>\n                </Loading>\n            </Fragment>\n        );\n    }\n}\n\nconst mapState = createSelector(\n    [\n        store => store.repository.result,\n        store => store.repository.loading,\n        store => store.entities.repositories,\n        store => store.entities.issues,\n        store => store.entities.milestones,\n        store => store.entities.labels,\n        store => store.entities.comments,\n        store => store.user.viewer,\n        store => store.user.loading,\n    ],\n    (\n        result,\n        loading,\n        repositoriesMap,\n        issuesMap,\n        milestonesMap,\n        labelsMap,\n        commentsMap,\n        viewer,\n        isUserLoading,\n    ) => {\n        let issueID, currentIssue = {};\n        const repository = repositoriesMap[result];\n        if (repository) {\n            issueID = repository.issue;\n        }\n        if (issueID) {\n            currentIssue = issuesMap[issueID];\n        }\n        return {\n            loading,\n            currentIssue,\n            milestonesMap,\n            labelsMap,\n            commentsMap,\n            viewer,\n            isUserLoading,\n        };\n    }\n)\n\n\nexport default  connect(mapState)(withRouter(ArticlePage));"],"sourceRoot":""}