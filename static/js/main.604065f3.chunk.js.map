{"version":3,"sources":["pages/Index/style.module.scss","components/Loading/style.module.scss","pages/Article/github.svg","pages/Article/style.module.scss","commons/config.js","commons/schemas.js","utils/getToken.js","services/github.js","models/repository.js","models/entities.js","models/index.js","services/serviceWorker.js","components/Loading/index.js","pages/Index/index.js","pages/Editor/index.js","pages/Article/index.js","pages/App.js","index.js"],"names":["module","exports","container","header","navItem","active","articlesContainer","article","articleTitle","articleInfo","articleCategory","articleLabel","loadingContainer","__webpack_require__","p","articleBody","issueCommentsContainer","issueComment","commentorAvatar","issueCommentHeader","issueCommentContent","createCommentContainer","createComment","createCommentAvatar","createCommentHeader","commentSwitch","commentorLogin","createCommentInputContainer","createCommentTextarea","createCommentOperator","config","owner","repo","token","client_id","client_secret","milestone","schema","Entity","label","comment","issue","labels","nodes","comments","repository","issues","milestones","getToken","secret","atob","regexp","RegExp","concat","replace","initIndex","services_github_initIndex","apply","this","arguments","_callee","regenerator_default","a","wrap","_context","prev","next","abrupt","axios","post","query","headers","Authorization","then","response","normalize","data","stop","getSingleIssue","_x","services_github_getSingleIssue","_callee2","number","_context2","getLoginAuthLink","scope","redirect_uri","encodeURIComponent","queryString","Object","keys","map","key","join","object","require","models_repository","name","state","result","loading","reducers","update","payload","merge","effects","dispatch","_initIndex","asyncToGenerator","mark","_","rootState","githubServices","sent","entities","_x2","_getSingleIssue","_x3","_x4","closeCurrentIssue","_closeCurrentIssue","_callee3","currentRepository","newEntities","_context3","repositories","undefined","defineProperty","_x5","_x6","models","Boolean","window","location","hostname","match","Loading","_ref","children","_ref$loading","react_default","createElement","className","styles","react","DEFAULT_MILESTONE","title","id","DEFAULT_ISSUES_OBJ","pageInfo","totalCount","IndexPage","_this","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","activeMilestone","props","_this$props","issuesList","milestonesList","milestonesMap","labelsMap","components_Loading","classNames","NavLink","to","aria-hidden","moment","createdAt","format","style","background","color","Component","mapState","createSelector","store","repositoriesMap","issuesMap","unshift","issuesObj","connect","EditorPage","_getPrototypeOf2","handleSubmit","bind","assertThisInitialized","e","preventDefault","body","create","value","_this2","htmlFor","ref","input","type","textarea","cols","rows","onClick","ArticlePage","handleInput","currentTarget","height","scrollTop","scrollHeight","params","_this$props2","commentsMap","currentIssue","dangerouslySetInnerHTML","__html","bodyHTML","author","href","url","src","avatarUrl","alt","login","githubIconUrl","onInput","placeholder","issueID","routerConfig","path","exact","component","withRouter","App","HashRouter","Switch","route","Route","d","__webpack_exports__","init","ReactDOM","render","es","pages_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.604065f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__1CTEx\",\"header\":\"style_header__1VHED\",\"navItem\":\"style_navItem__36neS\",\"active\":\"style_active__3WdfJ\",\"articlesContainer\":\"style_articlesContainer__2rKNV\",\"article\":\"style_article__g0wxV\",\"articleTitle\":\"style_articleTitle__17Rw5\",\"articleInfo\":\"style_articleInfo__3Tym_\",\"articleCategory\":\"style_articleCategory__f0xgF\",\"articleLabel\":\"style_articleLabel__19l4_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingContainer\":\"style_loadingContainer__3W5OD\"};","module.exports = __webpack_public_path__ + \"static/media/github.c9e82c1f.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__vgro-\",\"articleInfo\":\"style_articleInfo__3N387\",\"articleCategory\":\"style_articleCategory__2Yp5u\",\"articleLabel\":\"style_articleLabel__EAk0-\",\"articleBody\":\"style_articleBody__nw0TM\",\"issueCommentsContainer\":\"style_issueCommentsContainer__31mga\",\"issueComment\":\"style_issueComment__14LFL\",\"commentorAvatar\":\"style_commentorAvatar__vjQHI\",\"issueCommentHeader\":\"style_issueCommentHeader__D6cu-\",\"issueCommentContent\":\"style_issueCommentContent__cd6g6\",\"createCommentContainer\":\"style_createCommentContainer__1xO-G\",\"createComment\":\"style_createComment__KcpwS\",\"createCommentAvatar\":\"style_createCommentAvatar__1l2eW\",\"createCommentHeader\":\"style_createCommentHeader__3AxDl\",\"commentSwitch\":\"style_commentSwitch__3295I\",\"active\":\"style_active__1xMn4\",\"commentorLogin\":\"style_commentorLogin__1EBPS\",\"createCommentInputContainer\":\"style_createCommentInputContainer__2CEda\",\"createCommentTextarea\":\"style_createCommentTextarea__2i0zE\",\"createCommentOperator\":\"style_createCommentOperator__2AZGN\"};","export default {\n    owner: 'zhirui1994',\n    repo: 'zhirui1994.github.io',\n    token: \"MSt6aGlydWkxOTk0KzBhOGZmMjAwNWM3M2NmNmM1YzEzYWQyZmRkZjhjN2E4MDU0NzdlK3poaXJ1aTE5OTQuZ2l0aHViLmlvKzg=\",\n    client_id: '635ab95d562259d5e20a',\n    client_secret: 'e795e7e409ce731cf304facd92aecd305c774731',\n}","import { schema } from 'normalizr';\n\nexport const milestone = new schema.Entity('milestones');\nexport const label = new schema.Entity('labels');\nexport const comment = new schema.Entity('comments');\nexport const issue = new schema.Entity('issues', {\n    milestone: milestone,\n    labels: {\n        nodes: [label]\n    },\n    comments: {\n        nodes:[comment]\n    },\n});\nexport const repository = new schema.Entity('repositories', {\n    issue,\n    issues: {\n        nodes: [issue]\n    },\n    labels: {\n        nodes: [label]\n    },\n    milestones: {\n        nodes: [milestone]\n    },\n})","import config from '../commons/config';\n\nexport default function getToken() {\n    const secret = atob(config.token);\n    const regexp = new RegExp(`(\\\\+${config.owner}\\\\+|\\\\+${config.repo}\\\\+)`,'g');\n    const token = secret.replace(regexp,'');\n    return token;\n}","import axios from 'axios';\nimport { normalize } from 'normalizr';\nimport config from '../commons/config';\nimport { repository } from '../commons/schemas';\nimport getToken from '../utils/getToken';\n\nexport async function initIndex() {\n    return axios.post(\n        'https://api.github.com/graphql',\n        {\n            query: `query { \n                repository(owner: \"${config.owner}\", name: \"${config.repo}\") {\n                    id,\n                    labels(first: 100) {\n                        nodes {\n                            id,\n                            name,\n                            color,\n                        } \n                    },\n                    milestones(first:100) {\n                        nodes {\n                            id,\n                            number,\n                            state,\n                            title,\n                        }\n                    },\n                    issues(last:20, states:OPEN) {\n                        pageInfo {\n                            endCursor,\n                            startCursor,\n                            hasNextPage,\n                            hasPreviousPage\n                        },\n                        totalCount,\n                        nodes {\n                            id,\n                            title,\n                            number,\n                            createdAt,\n                            milestone {\n                                id\n                            },\n                            labels(first:100) {\n                                nodes {\n                                    id,\n                                }\n                            }\n                        }\n                    }\n                }\n            }`\n        },\n        {\n            headers: {\n                Authorization: `bearer ${getToken()}`\n            },\n        }\n    ).then(response => {\n        return normalize(response.data.data.repository, repository);\n    });\n}\n\nexport async function getSingleIssue(number) {\n    return axios.post(\n        'https://api.github.com/graphql',\n        {\n            query: `query { \n                repository(owner: \"${config.owner}\", name: \"${config.repo}\") {\n                    id,\n                    issue(number: ${number}) {\n                        id,\n                        title,\n                        number,\n                        bodyHTML,\n                        createdAt,\n                        milestone {\n                            id,\n                            number,\n                            state,\n                            title,\n                        },\n                        labels(first:100) {\n                            nodes {\n                                id,\n                                name,\n                                color,\n                            }\n                        },\n                        comments(last: 20) {\n                            nodes {\n                                id,\n                                author {\n                                    avatarUrl,\n                                    login,\n                                    url,\n                                },\n                                bodyHTML,\n                                createdAt,\n                            }\n                        }\n                    }\n                }\n            }`\n        },\n        {\n            headers: {\n                Authorization: `bearer ${getToken()}`\n            },\n        }\n    ).then(response => {\n        return normalize(response.data.data.repository, repository);\n    })\n}\n\nexport function getLoginAuthLink() {\n    const query = {\n        scope: 'public_repo',\n        redirect_uri: encodeURIComponent(`https://zhirui1994.github.io/#/article/1`),\n        client_id: config.client_id,\n        // client_secret: config.client_secret,\n    }\n    const queryString = Object.keys(query).map(key => `${key}=${query[key]}`).join('&');\n    return `https://github.com/login/oauth/authorize?${queryString}`\n} ","import * as githubServices from '../services/github'\n\nconst object = require('lodash/fp/object');\n\nexport default {\n    name: 'repository',\n    state: {\n        result: '',\n        loading: true,\n    },\n    reducers: {\n        update(state, payload) {\n            return object.merge(state, payload);\n        }\n    },\n    effects: (dispatch) => ({\n        async initIndex(_, rootState) {\n            if (!rootState.repository.loading) {\n                await dispatch.repository.update({\n                    loading: true,\n                });\n            }\n            const response = await githubServices.initIndex()\n            if (response) {\n                await dispatch.entities.update(response.entities);\n                await dispatch.repository.update({\n                    result: response.result,\n                    loading: false,\n                });\n            }\n        },\n        async getSingleIssue(number, rootState) {\n            if (!rootState.repository.loading) {\n                await dispatch.repository.update({\n                    loading: true,\n                });\n            }\n            const response = await githubServices.getSingleIssue(number)\n            if (response) {\n                await dispatch.entities.update(response.entities);\n                await dispatch.repository.update({\n                    result: response.result,\n                    loading: false,\n                })\n            }\n        },\n        async closeCurrentIssue(_, rootState) {\n            const result = rootState.repository.result;\n            const currentRepository = rootState.entities.repositories[result];\n            if (currentRepository) {\n                currentRepository.issue = undefined;\n                const newEntities = {\n                    repositories: {\n                        [result]: currentRepository\n                    }\n                };\n                await dispatch.entities.update(newEntities);\n            }\n        }\n    })\n}","const object = require('lodash/fp/object');\n\nexport default {\n    name: 'entities',\n    state: {\n        repositories: {},\n        issues: {},\n        labels: {},\n        milestones: {},\n        comments: {},\n    },\n    reducers: {\n        update(state, payload) {\n            return object.merge(state, payload)\n        },\n    }\n}","import repository from './repository';\nimport entities from './entities';\n\nexport default {\n    entities,\n    repository,\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Fragment } from 'react';\nimport styles from './style.module.scss';\n\nconst Loading = ({ children, loading=true }) => {\n    if (loading) {\n        return (\n            <div className={styles.loadingContainer} >\n                <i className=\"fa fa-spinner fa-pulse\"></i>\n            </div>\n        );\n    } else {\n        return (\n            <Fragment>\n                {children}\n            </Fragment>\n        );\n    }\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { createSelector } from 'reselect';\nimport { NavLink } from 'react-router-dom';\nimport Loading from '../../components/Loading'\nimport styles from './style.module.scss'\n\nconst DEFAULT_MILESTONE = {\n    title: '最新',\n    id: 'default_milestone'\n}\nconst DEFAULT_ISSUES_OBJ = {\n    nodes: [],\n    pageInfo: {\n\n    },\n    totalCount: 0,\n}\n\nclass IndexPage extends Component {\n    constructor(...args) {\n        super(args);\n        this.state = {\n            activeMilestone: DEFAULT_MILESTONE\n        }\n    }\n\n    componentDidMount() {\n        const { dispatch } = this.props;\n        dispatch.repository.initIndex();\n    }\n\n    render() {\n        const { activeMilestone } = this.state;\n        const {\n            loading,\n            issuesList,\n            milestonesList,\n            milestonesMap,\n            labelsMap,\n        } = this.props;\n        return (\n            <Loading loading={loading}>\n                <div className={styles.container}>\n                    <header className={styles.header}>\n                    <nav>\n                        {milestonesList.map(milestone => {\n                            return (\n                                <span\n                                    key={milestone.id}\n                                    className={classNames(\n                                        styles.navItem,\n                                        {\n                                            [styles.active]:\n                                                milestone.title === activeMilestone.title,\n                                        },\n                                    )}\n                                >\n                                    {milestone.title}\n                                </span>\n                            )\n                        })}\n                    </nav>\n                    </header>\n                    <main className={styles.articlesContainer}>\n                        {issuesList.map(issue => {\n                            return (\n                                <article className={styles.article} key={issue.id}>\n                                    <NavLink to={`/article/${issue.number}`}>\n                                        <h3 className={styles.articleTitle}>{issue.title}</h3>\n                                    </NavLink>\n                                    <p className={styles.articleInfo}>\n                                        <span>\n                                            <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                                            {moment(issue.createdAt).format('YYYY-MM-DD')}\n                                        </span>\n                                        <span>\n                                            <i className=\"fa fa-th-list\" aria-hidden=\"true\"></i>\n                                            <span className={styles.articleCategory}>{milestonesMap[issue.milestone].title}</span>\n                                        </span>\n                                        <span>\n                                            <i className=\"fa fa-tags\" aria-hidden=\"true\"></i>\n                                            {issue.labels.nodes.map(id => {\n                                                const label = labelsMap[id]\n                                                return (\n                                                    <span\n                                                        key={label.id}\n                                                        className={styles.articleLabel}\n                                                        style={{\n                                                            background: `#${label.color}`,\n                                                        }}\n                                                    >\n                                                        {label.name}\n                                                    </span>\n                                                )\n                                            })}\n                                        </span>\n                                    </p>\n                                </article>\n                            )\n                        })}\n                    </main>\n                </div>\n            </Loading>\n        );\n    }\n}\n\nconst mapState = createSelector(\n    [\n        store => store.repository.result,\n        store => store.repository.loading,\n        store => store.entities.repositories,\n        store => store.entities.issues,\n        store => store.entities.milestones,\n        store => store.entities.labels,\n    ],\n    (\n        result,\n        loading,\n        repositoriesMap,\n        issuesMap,\n        milestonesMap,\n        labelsMap,\n    ) => {\n        const repository = repositoriesMap[result];\n        const milestonesList = Object.keys(milestonesMap).map(id => milestonesMap[id]);\n        if (milestonesList.length) {\n            milestonesList.unshift(DEFAULT_MILESTONE);\n        }\n        let issuesObj = DEFAULT_ISSUES_OBJ;\n        if (repository && repository.issues) {\n            issuesObj = repository.issues;\n        }\n        return {\n            loading,\n            labelsMap,\n            milestonesMap,\n            milestonesList,\n            issuesList: issuesObj.nodes.map(id => issuesMap[id]),\n            pageInfo: issuesObj.pageInfo,\n            totalCount: issuesObj.totalCount,\n        }\n    }\n)\n\nexport default connect(mapState)(IndexPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass EditorPage extends Component {\n    constructor(...args){\n        super(...args);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const { dispatch } = this.props;\n        if (this.title && this.body) {\n            dispatch.issues.create({\n                title: this.title.value,\n                body: this.body.value,\n            })\n        }\n    }\n\n    render() {\n        return (\n        <div className=\"Editor\">\n            <header className=\"App-header\">\n                文章编辑页！\n            </header>\n            <form>\n                <label htmlFor=\"title\">标题：<input ref={input => this.title = input} type=\"text\" id=\"title\" /></label>\n                <label htmlFor=\"body\">内容：<textarea ref={textarea => this.body = textarea} cols=\"60\" rows=\"5\" id=\"body\" /></label>\n                <input onClick={this.handleSubmit} type=\"submit\" value=\"创建\" />\n            </form>\n        </div>\n        );\n    }\n}\n\nexport default connect()(EditorPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport { createSelector } from 'reselect';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport Loading from '../../components/Loading';\nimport { getLoginAuthLink } from '../../services/github';\nimport styles from './style.module.scss';\nimport githubIconUrl from './github.svg';\n\nclass ArticlePage extends Component {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        const number = match.params.number;\n        dispatch.repository.getSingleIssue(number);\n    }\n\n    componentWillUnmount() {\n        const { dispatch } = this.props;\n        dispatch.repository.closeCurrentIssue();\n    }\n\n    handleInput = (e) => {\n        e.preventDefault();\n        const { currentTarget } = e;\n        currentTarget.style.height = 'auto';\n        currentTarget.style.height = currentTarget.scrollTop + currentTarget.scrollHeight + 'px';\n    }\n\n    render() {\n        const {\n            loading,\n            labelsMap,\n            commentsMap,\n            currentIssue,\n            milestonesMap,\n        } = this.props;\n\n        return (\n            <Loading loading={loading}>\n                <div className={styles.container}>\n                    <header>\n                        <h1>{currentIssue.title}</h1>\n                        <p className={styles.articleInfo}>\n                            <span>\n                                <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                                {moment(currentIssue.createdAt).format('YYYY-MM-DD')}\n                            </span>\n                            <span>\n                                <i className=\"fa fa-th-list\" aria-hidden=\"true\"></i>\n                                <span className={styles.articleCategory}>\n                                    {currentIssue.milestone && milestonesMap[currentIssue.milestone].title}\n                                </span>\n                            </span>\n                            <span>\n                                <i className=\"fa fa-tags\" aria-hidden=\"true\"></i>\n                                {currentIssue.labels && currentIssue.labels.nodes.map(id => {\n                                    const label = labelsMap[id]\n                                    return (\n                                        <span\n                                            key={label.id}\n                                            className={styles.articleLabel}\n                                            style={{\n                                                background: `#${label.color}`,\n                                            }}\n                                        >\n                                            {label.name}\n                                        </span>\n                                    )\n                                })}\n                            </span>\n                        </p>\n                    </header>\n                    <main>\n                        <article\n                            className={classNames(styles.articleBody, 'markdown-body')}\n                            dangerouslySetInnerHTML={{ __html: currentIssue.bodyHTML }}\n                        ></article>\n                        <div className={styles.issueCommentsContainer}>\n                            {currentIssue.comments && currentIssue.comments.nodes.map(id => {\n                                const comment = commentsMap[id];\n\n                                if (comment) {\n                                    const { author } = comment;\n                                    return (\n                                        <section key={comment.id} className={styles.issueComment}>\n                                            <a className={styles.commentorAvatar} href={author.url}>\n                                                <img src={author.avatarUrl} alt=\"This is commentor's avatar\" />\n                                            </a>\n                                            <p className={styles.issueCommentHeader}>\n                                                <a href={author.url}><em>{author.login}</em></a>\n                                                <span>{moment(comment.createdAt).format('YYYY-MM-DD HH:mm:ss')}</span>\n                                            </p>\n                                            <article\n                                                className={classNames(styles.issueCommentContent, 'markdown-body')}\n                                                dangerouslySetInnerHTML={{ __html: comment.bodyHTML}}\n                                            ></article>\n                                        </section>\n                                    );\n                                } else {\n                                    return null;\n                                }\n                            })}\n                            <section className={styles.createCommentContainer}>\n                                <div className={styles.createComment} >\n                                    <a className={styles.createCommentAvatar} href={getLoginAuthLink()}>\n                                        <img src={githubIconUrl} alt=\"This is commentor's avatar\" />\n                                    </a>\n                                    <div className={styles.createCommentHeader}>\n                                        <span className={classNames(styles.commentSwitch, styles.active)} >编辑</span>\n                                        <span className={styles.commentSwitch} >预览</span>\n                                        <span className={styles.commentorLogin} >通过GitHub<a href={getLoginAuthLink()}>登陆</a></span>\n                                    </div>\n                                    <div className={styles.createCommentInputContainer}>\n                                        <textarea onInput={this.handleInput} className={styles.createCommentTextarea} placeholder=\"请编辑您的评论\"></textarea>\n                                    </div>\n                                    <div className={styles.createCommentOperator}>\n                                        <button>评论</button>\n                                    </div>\n                                </div>\n                            </section>\n                        </div>\n                    </main>\n                </div>\n            </Loading>\n        );\n    }\n}\n\nconst mapState = createSelector(\n    [\n        store => store.repository.result,\n        store => store.repository.loading,\n        store => store.entities.repositories,\n        store => store.entities.issues,\n        store => store.entities.milestones,\n        store => store.entities.labels,\n        store => store.entities.comments,\n    ],\n    (\n        result,\n        loading,\n        repositoriesMap,\n        issuesMap,\n        milestonesMap,\n        labelsMap,\n        commentsMap,\n    ) => {\n        let issueID, currentIssue = {};\n        const repository = repositoriesMap[result];\n        if (repository) {\n            issueID = repository.issue;\n        }\n        if (issueID) {\n            currentIssue = issuesMap[issueID];\n        }\n        return {\n            loading,\n            currentIssue,\n            milestonesMap,\n            labelsMap,\n            commentsMap,\n        };\n    }\n)\n\n\nexport default  connect(mapState)(withRouter(ArticlePage));","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport IndexPage from './Index';\nimport EditorPage from './Editor';\nimport ArticlePage from './Article';\n\nconst routerConfig = [\n    {\n        path: '/',\n        exact: true,\n        component: IndexPage,\n    },\n    {\n        path: '/editor',\n        exact: true,\n        component: EditorPage,\n    },\n    {\n        path: '/article/:number',\n        exact: true,\n        component: ArticlePage,\n    }\n];\n\nconst App = () => {\n    return (\n        <Router>\n            <Switch>\n                {routerConfig.map(route =>\n                    (<Route\n                        key={route.path}\n                        path={route.path}\n                        exact={route.exact}\n                        component={route.component}\n                    />)\n                )}\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { init } from '@rematch/core';\nimport { Provider } from 'react-redux';\nimport models from './models/index';\nimport * as serviceWorker from './services/serviceWorker';\nimport App from './pages/App';\nimport './styles/index.scss';\n\nexport const store = init({\n    models,\n}) \n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}