{"version":3,"sources":["commons/schemas.js","utils/getToken.js","services/github.js","components/Loading/style.module.scss","models/repository.js","models/entities.js","models/user.js","models/index.js","commons/const.js","services/serviceWorker.js","pages/App.js","index.js","commons/config.js","components/Loading/index.js","utils/urlSearchParser.js"],"names":["milestone","schema","Entity","label","comment","issue","labels","nodes","comments","repository","issues","milestones","getToken","secret","atob","config","token","regexp","RegExp","concat","owner","repo","replace","initIndex","_initIndex","apply","this","arguments","_callee","regenerator_default","a","wrap","_context","prev","next","abrupt","axios","post","query","headers","Authorization","then","response","normalize","data","stop","getSingleIssue","_x","_getSingleIssue","_callee2","number","_context2","getLoginAuthLink","scope","redirect_uri","encodeURIComponent","window","location","href","client_id","queryString","Object","keys","map","key","join","userAuth","_x2","_userAuth","_callee3","code","_context3","client_secret","Accept","getViewer","_x3","_getViewer","_callee4","_context4","viewer","addComment","_x4","_addComment","_callee5","_ref","id","content","_context5","commentEdge","node","commentSchema","initEditor","_x5","_x6","_initEditor","_callee6","hasLabelsAndMilestones","_context6","undefined","repositoryObj","searchIssues","_x7","_searchIssues","_callee7","params","_context7","length","trim","search","norNodes","issueSchema","objectSpread","result","entities","createIssue","_x8","_createIssue","_callee8","_context8","title","body","node_id","editIssue","_x9","_editIssue","_callee9","_context9","patch","getAuthUser","_x10","_getAuthUser","_callee10","_context10","get","auth","username","password","user","camelize","module","exports","loadingContainer","object","require","name","state","loading","searchParams","reducers","update","payload","merge","effects","dispatch","asyncToGenerator","mark","_","rootState","githubServices","sent","closeCurrentIssue","_closeCurrentIssue","currentRepository","newEntities","repositories","defineProperty","hasCurrentIssueBody","pageInfo","totalCount","issueCount","callback","_x11","_x12","_x13","_x14","models","accessToken","tokenType","email","login","url","avatarUrl","getAuthToken","_getAuthToken","userCache","_JSON$parse","access_token","token_type","oauth","_user","getSearchCode","localStorage","getItem","JSON","parse","setItem","stringify","_addComment2","issuesMap","commentIssue","push","_getAuthUser2","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","routerConfig","path","exact","component","lazy","Promise","all","__webpack_require__","e","bind","App","react_default","createElement","HashRouter","react","fallback","Loading","Switch","route","Route","d","__webpack_exports__","store","init","ReactDOM","render","es","pages_App","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_style_module_scss__WEBPACK_IMPORTED_MODULE_1__","_style_module_scss__WEBPACK_IMPORTED_MODULE_1___default","children","_ref$loading","className","styles","URLSearchParams","delete","toString","pathname","hash","history","pushState","isPWA"],"mappings":"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","file":"static/js/main.f9b22665.chunk.js","sourcesContent":["import { schema } from 'normalizr';\n\nexport const milestone = new schema.Entity('milestones');\nexport const label = new schema.Entity('labels');\nexport const comment = new schema.Entity('comments');\nexport const issue = new schema.Entity('issues', {\n    milestone: milestone,\n    labels: {\n        nodes: [label]\n    },\n    comments: {\n        nodes:[comment]\n    },\n});\n\nexport const repository = new schema.Entity('repositories', {\n    issue,\n    issues: {\n        nodes: [issue]\n    },\n    labels: {\n        nodes: [label]\n    },\n    milestones: {\n        nodes: [milestone]\n    },\n})","import config from '../commons/config';\n\nexport default function getToken() {\n    const secret = atob(config.token);\n    const regexp = new RegExp(`(\\\\+${config.owner}\\\\+|\\\\+${config.repo}\\\\+)`,'g');\n    const token = secret.replace(regexp,'');\n    return token;\n}","import axios from 'axios';\nimport { normalize } from 'normalizr';\nimport camelize from 'camelize';\nimport config from '../commons/config';\nimport { repository, comment as commentSchema, issue as issueSchema } from '../commons/schemas';\nimport getToken from '../utils/getToken';\n\nexport async function initIndex() {\n    return axios.post(\n        'https://api.github.com/graphql',\n        {\n            query: `query { \n                repository(owner: \"${config.owner}\", name: \"${config.repo}\") {\n                    id,\n                    labels(first: 100) {\n                        nodes {\n                            id,\n                            name,\n                            color,\n                        } \n                    },\n                    milestones(first:100) {\n                        nodes {\n                            id,\n                            number,\n                            state,\n                            title,\n                        }\n                    },\n                    issues(last:20, states:OPEN, orderBy: {direction: DESC, field: UPDATED_AT}) {\n                        pageInfo {\n                            endCursor,\n                            startCursor,\n                            hasNextPage,\n                            hasPreviousPage\n                        },\n                        totalCount,\n                        nodes {\n                            id,\n                            title,\n                            number,\n                            createdAt,\n                            milestone {\n                                id\n                            },\n                            labels(first:100) {\n                                nodes {\n                                    id,\n                                }\n                            }\n                        }\n                    }\n                }\n            }`\n        },\n        {\n            headers: {\n                Authorization: `bearer ${getToken()}`\n            },\n        }\n    ).then(response => {\n        return normalize(response.data.data.repository, repository);\n    });\n}\n\nexport async function getSingleIssue(number) {\n    return axios.post(\n        'https://api.github.com/graphql',\n        {\n            query: `query { \n                repository(owner: \"${config.owner}\", name: \"${config.repo}\") {\n                    id,\n                    issue(number: ${number}) {\n                        id,\n                        title,\n                        number,\n                        bodyHTML,\n                        createdAt,\n                        milestone {\n                            id,\n                            number,\n                            state,\n                            title,\n                        },\n                        labels(first:100) {\n                            nodes {\n                                id,\n                                name,\n                                color,\n                            }\n                        },\n                        comments(last: 20) {\n                            nodes {\n                                id,\n                                author {\n                                    avatarUrl,\n                                    login,\n                                    url,\n                                },\n                                bodyHTML,\n                                createdAt,\n                            }\n                        }\n                    }\n                }\n            }`\n        },\n        {\n            headers: {\n                Authorization: `bearer ${getToken()}`\n            },\n        }\n    ).then(response => {\n        return normalize(response.data.data.repository, repository);\n    })\n}\n\nexport function getLoginAuthLink() {\n    const query = {\n        scope: 'public_repo, user',\n        redirect_uri: encodeURIComponent(window.location.href),\n        client_id: config.client_id,\n    }\n    const queryString = Object.keys(query).map(key => `${key}=${query[key]}`).join('&');\n    return `https://github.com/login/oauth/authorize?${queryString}`\n}\n\nexport async function userAuth(code) {\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token'\n    return axios.post(proxyUrl, {\n        code,\n        client_id: config.client_id,\n        client_secret: config.client_secret,\n    },\n    {\n        headers: {\n            Accept: 'application/json'\n        }\n    }).then(response => {\n        return response && response.data;\n    })\n}\n\nexport async function getViewer(token) {\n    return axios.post('https://api.github.com/graphql', {\n        query: `query { \n            viewer {\n                email,\n                id,\n                login,\n                name,\n                url,\n                avatarUrl, \n            }\n        }`\n        },\n        {\n            headers: {\n                Authorization: token,\n            }\n        }\n    ).then(response => {\n        return response && response.data && response.data.data && response.data.data.viewer;\n    });\n}\n\nexport async function addComment({id, content, token}) {\n    return axios.post(\n        'https://api.github.com/graphql',\n        {\n            query: `mutation {\n                addComment(input:{subjectId: \"${id}\", body: \"${content}\"}) {\n                    commentEdge {\n                        node {\n                            id,\n                            bodyHTML,\n                            createdAt,\n                            author {\n                                avatarUrl,\n                                login,\n                                url,\n                            },\n                        }\n                    }\n                }\n            }`\n        },\n        {\n            headers: {\n                Authorization: token,\n            }\n        }\n    ).then(response => {\n        const comment = response && response.data && response.data.data\n            && response.data.data.addComment.commentEdge.node;\n        if (comment) {\n            return normalize(comment, commentSchema)\n        }\n    });\n}\n\nexport async function initEditor(number, hasLabelsAndMilestones) {\n    return axios.post(\n        'https://api.github.com/graphql',\n        {\n            query: `query {\n                repository(owner: \"${config.owner}\", name: \"${config.repo}\") {\n                    id\n                    ${hasLabelsAndMilestones ? '' :\n                        `labels(first: 100) {\n                            nodes {\n                                id\n                                name\n                                color\n                            }\n                        }\n                        milestones(first: 100) {\n                            nodes {\n                                id\n                                number\n                                state\n                                title\n                            }\n                        }`\n                    }\n                    ${number !== undefined ? \n                    `issue(number: ${number}) {\n                        id\n                        title\n                        number\n                        body\n                        milestone {\n                            id\n                        }\n                        labels(first: 100) {\n                            nodes {\n                                id\n                            }\n                        }\n                    }` : ''}\n                    \n                }\n            }`\n        },\n        {\n            headers: {\n                Authorization: `bearer ${getToken()}`\n            },\n        }\n    ).then(response => {\n        const repositoryObj = response && response.data\n            && response.data.data && response.data.data.repository;\n        if (repositoryObj) {\n            return normalize(repositoryObj, repository);\n        } else {\n            return false;\n        }\n    })\n}\n\nexport async function searchIssues(params) {\n    let queryString = `repo:${config.owner}/${config.repo} `;\n    if (params && params.milestone) {\n        queryString += `milestone:${params.milestone} `;\n    }\n    if (params && params.labels && params.labels.length) {\n        queryString += params.labels.map(label => `label:${label} `).join('');\n    }\n    if (params && params.query) {\n        queryString += `${params.query} `\n    }\n    return axios.post(\n        'https://api.github.com/graphql',\n        {\n            query: `query {\n                search(type: ISSUE, last: 20, query: \"${queryString.trim()}\") {\n                    issueCount\n                    pageInfo {\n                        endCursor\n                        startCursor\n                        hasNextPage\n                        hasPreviousPage\n                    }\n                    nodes {\n                        ... on Issue {\n                            id,\n                            title,\n                            number,\n                            createdAt,\n                            milestone {\n                                id\n                            },\n                            labels(first:100) {\n                                nodes {\n                                    id,\n                                }\n                            }\n                        }\n                    }\n                }\n            }`,\n        },\n        {\n            headers: {\n                Authorization: `bearer ${getToken()}`\n            },\n        }\n    ).then(response => {\n        const search = response && response.data && response.data.data && response.data.data.search;\n        if (search) {\n            const norNodes = normalize(search.nodes, [issueSchema]);\n            return {\n                ...search,\n                nodes: norNodes.result,\n                entities: norNodes.entities,\n            }\n        } else {\n            return false;\n        }\n    });\n}\n\n\nexport async function createIssue(params) {\n    return axios.post(`https://api.github.com/repos/${config.owner}/${config.repo}/issues`,\n    {\n        title: params.title,\n        body: params.body,\n        milestone: params.milestone,\n        labels: params.labels,\n    },\n    {\n        headers: {\n            Authorization: `token ${getToken()}`\n        },\n    }).then(response => {\n        const issue = response && response.data\n        if (issue) {\n            issue.id = issue.node_id;\n            issue.labels = {\n                nodes: issue.labels.map(label => {\n                    label.id = label.node_id;\n                    return label;\n                })\n            };\n            issue.milestone.id = issue.milestone.node_id;\n            issue.comments = {\n                nodes: []\n            };\n            return normalize(issue, issueSchema);\n        }\n    })\n}\n\nexport async function editIssue(params) {\n    return axios.patch(\n        `https://api.github.com/repos/${config.owner}/${config.repo}/issues/${params.number}`,\n        {\n            title: params.title,\n            body: params.body,\n            milestone: params.milestone,\n            labels: params.labels\n        },\n        {\n            headers: {\n                Authorization: `token ${getToken()}`\n            },\n        }\n    ).then(response => {\n        const issue = response && response.data\n        if (issue) {\n            issue.id = issue.node_id;\n            issue.labels = {\n                nodes: issue.labels.map(label => {\n                    label.id = label.node_id;\n                    return label;\n                })\n            };\n            issue.milestone.id = issue.milestone.node_id;\n            issue.comments = {\n                nodes: []\n            };\n            return normalize(issue, issueSchema);\n        }\n    })\n}\n\nexport async function getAuthUser(params) {\n    return axios.get('https://api.github.com/user', {\n        auth: {\n            username: params.username,\n            password: params.password\n        },\n    }).then(response => {\n        const user = response && response.data;\n        if (user) {\n            user.id = user.node_id;\n            return camelize(user);\n        }\n    })\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingContainer\":\"style_loadingContainer__3Pquw\"};","import * as githubServices from '../services/github'\n\nconst object = require('lodash/fp/object');\n\nexport default {\n    name: 'repository',\n    state: {\n        result: '',\n        loading: true,\n        searchParams: {\n            milestone: '*',\n            labels: [],\n            query: '', \n        }\n    },\n    reducers: {\n        update(state, payload) {\n            return object.merge(state, payload);\n        }\n    },\n    effects: (dispatch) => ({\n        async initIndex(_, rootState) {\n            if (!rootState.repository.loading) {\n                await dispatch.repository.update({\n                    loading: true,\n                });\n            }\n            const response = await githubServices.initIndex()\n            if (response) {\n                await dispatch.entities.update(response.entities);\n                await dispatch.repository.update({\n                    result: response.result,\n                    loading: false,\n                });\n            }\n        },\n        async getSingleIssue(number, rootState) {\n            if (!rootState.repository.loading) {\n                await dispatch.repository.update({\n                    loading: true,\n                });\n            }\n            const response = await githubServices.getSingleIssue(number)\n            if (response) {\n                await dispatch.entities.update(response.entities);\n                await dispatch.repository.update({\n                    result: response.result,\n                    loading: false,\n                })\n            }\n        },\n        async closeCurrentIssue(_, rootState) {\n            const result = rootState.repository.result;\n            const currentRepository = rootState.entities.repositories[result];\n            if (currentRepository) {\n                currentRepository.issue = undefined;\n                const newEntities = {\n                    repositories: {\n                        [result]: currentRepository\n                    }\n                };\n                await dispatch.entities.update(newEntities);\n            }\n        },\n        async initEditor(number, rootState) {\n            const result = rootState.repository.result;\n            const currentRepository = rootState.entities.repositories[result];\n            const hasLabelsAndMilestones = currentRepository &&\n                currentRepository.labels &&\n                currentRepository.labels.nodes.length &&\n                currentRepository.milestones &&\n                currentRepository.milestones.nodes.length;\n            const hasCurrentIssueBody = !number || (\n                currentRepository &&\n                currentRepository.issue &&\n                rootState.entities.issues[currentRepository.issue] &&\n                rootState.entities.issues[currentRepository.issue].body);\n            if (hasLabelsAndMilestones && hasCurrentIssueBody) {\n                return;\n            }\n            if (!rootState.repository.loading) {\n                await dispatch.repository.update({\n                    loading: true,\n                });\n            }\n            const response = await githubServices.initEditor(number, hasLabelsAndMilestones)\n            if (response) {\n                await dispatch.entities.update(response.entities);\n                await dispatch.repository.update({\n                    result: response.result,\n                    loading: false,\n                });\n            }\n        },\n        async searchIssues(payload, rootState) {\n            const { milestone, labels, query } = payload;\n            await dispatch.repository.update({\n                searchParams: {\n                    milestone,\n                    labels,\n                    query,\n                }\n            })\n            const response = await githubServices.searchIssues({\n                milestone,\n                labels,\n                query,\n            });\n            if (response) {\n                const result = rootState.repository.result;\n                const currentRepository = rootState.entities.repositories[result];\n                if (currentRepository) {\n                    currentRepository.issues = {\n                        pageInfo: response.pageInfo,\n                        totalCount: response.issueCount,\n                        nodes: response.nodes,\n                    }\n                    dispatch.entities.update({\n                        repositories: {\n                            [result]: currentRepository,\n                        },\n                        ...response.entities,\n                    })\n                }\n            }\n        },\n        async createIssue(payload, rootState) {\n            const response =  await githubServices.createIssue(payload);\n            if (response && response.result) {\n                const currentRepository = rootState.entities.repositories[rootState.repository.result];\n                currentRepository.issue = response.result;\n                await dispatch.entities.update({\n                    ...response.entities,\n                    repositories: {\n                        [rootState.repository.result]: currentRepository,\n                    }\n                });\n                typeof payload.callback === 'function' && payload.callback(`/article/${response.entities.issues[response.result].number}`)\n            }\n        },\n        async editIssue(payload, rootState) {\n            const response =  await githubServices.editIssue(payload);\n            if (response && response.result) {\n                const currentRepository = rootState.entities.repositories[rootState.repository.result];\n                currentRepository.issue = response.result;\n                await dispatch.entities.update({\n                    ...response.entities,\n                    repositories: {\n                        [rootState.repository.result]: currentRepository,\n                    }\n                });\n                typeof payload.callback === 'function' && payload.callback(`/article/${response.entities.issues[response.result].number}`)\n            }\n        },\n    })\n}","const object = require('lodash/fp/object');\n\nexport default {\n    name: 'entities',\n    state: {\n        repositories: {},\n        issues: {},\n        labels: {},\n        milestones: {},\n        comments: {},\n    },\n    reducers: {\n        update(state, payload) {\n            return object.merge(state, payload)\n        },\n    }\n}","import { userAuth, getViewer, addComment, getAuthUser } from '../services/github';\nimport { getSearchCode } from '../utils/urlSearchParser';\nimport { USER_AUTH } from '../commons/const';\n\nconst object = require('lodash/fp/object');\n\nexport default {\n    name: 'user',\n    state: {\n        loading: false,\n        auth: false,\n        accessToken: '',\n        scope: '',\n        tokenType: '',\n        viewer: {\n            email: '',\n            id: '',\n            login: '',\n            name: '',\n            url: '',\n            avatarUrl: ''\n        }\n    },\n    reducers: {\n        update(state, payload) {\n            return object.merge(state, payload)\n        },\n    },\n    effects: (dispatch) => ({\n        async getAuthToken(_, rootState) {\n            if (!rootState.user.loading) {\n                await dispatch.user.update({\n                    loading: true,\n                })\n            }\n\n            const code = getSearchCode();\n            const userCache = localStorage.getItem(USER_AUTH);\n            if (userCache ) {\n                const { \n                    access_token,\n                    token_type,\n                    scope,\n                } = JSON.parse(userCache);\n                const user = await getViewer(`${token_type} ${access_token}`)\n                if (user) {\n                    await dispatch.user.update({\n                        accessToken: access_token,\n                        tokenType: token_type,\n                        scope: scope,\n                        auth: true,\n                        loading: false,\n                        viewer: user,\n                    })\n                }\n            } else if (code) {\n                const oauth = await userAuth(code);\n                if (oauth && oauth.access_token) {\n                    localStorage.setItem(USER_AUTH, JSON.stringify(oauth));\n                    const user = await getViewer(`${oauth.token_type} ${oauth.access_token}`)\n                    if (user) {\n                        await dispatch.user.update({\n                            accessToken: oauth.access_token,\n                            tokenType: oauth.token_type,\n                            scope: oauth.scope,\n                            auth: true,\n                            loading: false,\n                            viewer: user,\n                        })\n                    }\n                }\n            }\n\n            await dispatch.user.update({\n                loading: false,\n            })\n        },\n        async addComment({id, content, callback}, rootState) {\n            if (!rootState.user.accessToken) {\n                return;\n            }\n\n            const token = `${rootState.user.tokenType} ${rootState.user.accessToken}`;\n            const comment = await addComment({id, content, token});\n            if (comment) {\n                const issuesMap = rootState.entities.issues;\n                const commentIssue = issuesMap[id];\n                commentIssue.comments.nodes.push(comment.result)\n                await dispatch.entities.update({\n                    issues: {\n                        [id]: commentIssue,\n                    },\n                    ...comment.entities,\n                })\n                typeof callback === 'function' && callback();\n            }\n        },\n        async getAuthUser(params, rootState) {\n            if (params && params.username && params.password) {\n                if (!rootState.user.loading) {\n                    await dispatch.user.update({\n                        loading: true,\n                    });\n                }\n                const user = await getAuthUser(params);\n                if (user) {\n                    await dispatch.user.update({\n                        auth: true,\n                        loading: false,\n                        viewer: user,\n                        username: params.username,\n                        password: params.password,\n                    })\n                } else {\n                    await dispatch.user.update({\n                        loading: false,\n                    });\n                }\n            }\n        }\n    })\n}","import repository from './repository';\nimport entities from './entities';\nimport user from './user';\n\nexport default {\n    user,\n    entities,\n    repository,\n}","export const USER_AUTH = 'GITHUB_USER_AUTH';","// 作用：注册service worker服务，实现pwa应用\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Suspense, lazy } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Loading from '../components/Loading'\n\nconst routerConfig = [\n    {\n        path: '/',\n        exact: true,\n        component: lazy(() => import('./Index')),\n    },\n    {\n        path: '/editor',\n        exact: true,\n        component: lazy(() => import('./Editor')),\n    },\n    {\n        path: '/editor/:number',\n        exact: true,\n        component: lazy(() => import('./Editor')),\n    },\n    {\n        path: '/article/:number',\n        exact: true,\n        component: lazy(() => import('./Article')),\n    }\n];\n\nconst App = () => {\n    return (\n        <Router>\n            <Suspense fallback={<Loading loading={true} />}>\n                <Switch>\n                    {routerConfig.map(route =>\n                        (<Route\n                            key={route.path}\n                            path={route.path}\n                            exact={route.exact}\n                            component={() => <route.component />}\n                        />)\n                    )}\n                </Switch>\n            </Suspense>\n        </Router>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { init } from '@rematch/core';\nimport { Provider } from 'react-redux';\nimport models from './models/index';\nimport * as serviceWorker from './services/serviceWorker';\nimport App from './pages/App';\nimport './styles/index.scss';\n\nexport const store = init({\n    models,\n}) \n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.register();\n","\r\nexport default {\r\n    owner: 'zhirui1994',\r\n    repo: 'zhirui1994.github.io',\r\n    token: 'MSt6aGlydWkxOTk0KzBhOGZmMjAwNWM3M2NmNmM1YzEzYWQyZmRkZjhjN2E4MDU0NzdlK3poaXJ1aTE5OTQuZ2l0aHViLmlvKzg=',\r\n    client_id: '635ab95d562259d5e20a',\r\n    client_secret: 'e795e7e409ce731cf304facd92aecd305c774731',\r\n}","import React, { Fragment } from 'react';\nimport styles from './style.module.scss';\n\nconst Loading = ({ children, loading=true }) => {\n    if (loading) {\n        return (\n            <div className={styles.loadingContainer} >\n                <i className=\"fa fa-spinner fa-pulse\"></i>\n            </div>\n        );\n    } else {\n        return (\n            <Fragment>\n                {children}\n            </Fragment>\n        );\n    }\n}\n\nexport default Loading;\n","export function getSearchCode() {\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code');\n    if (code) {\n        searchParams.delete('code');\n        const search = searchParams.toString();\n        const url = `${window.location.pathname}${search ? `?${search}` : ''}${window.location.hash}`;\n        window.history.pushState(null, null, url)\n        return code;\n    } else {\n        return '';\n    }\n}\n\nexport function isPWA() {\n    return window.location.href.indexOf('from=pwa') !== -1;\n}"],"sourceRoot":""}