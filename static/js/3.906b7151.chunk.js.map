{"version":3,"sources":["components/MarkdownPreviewer/style.module.scss","pages/Editor/style.module.scss","components/MarkdownPreviewer/index.js","pages/Editor/index.js"],"names":["module","exports","markdownPreviewer","editorContainer","header","fileds","checkLabel","submitButton","editorContent","marked","setOptions","breaks","highlight","code","hljs","highlightAuto","value","MarkdownPreviewer","handleInput","e","onChange","_this","props","editor","preventDefault","preview","innerHTML","defaultValue","this","_this2","react_default","a","createElement","className","styles","id","spellCheck","ref","textarea","onInput","section","Component","EditorPage","content","undefined","handleChange","handleSubmit","dispatch","title","issues","create","body","_this$props","labelsList","milestonesList","length","repository","initEditor","_this$props2","htmlFor","input","type","classNames","components_MarkdownPreviewer","map","milestone","name","label","concat","onClick","Date","getFullYear","mapState","createSelector","store","result","loading","entities","repositories","labels","milestones","repositoriesMap","labelsMap","milestonesMap","currentRepository","nodes","connect"],"mappings":"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","file":"static/js/3.906b7151.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"markdownPreviewer\":\"style_markdownPreviewer__2WsNP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editorContainer\":\"style_editorContainer__1Wmff\",\"header\":\"style_header__1BwOO\",\"fileds\":\"style_fileds__3fShH\",\"checkLabel\":\"style_checkLabel__23t6_\",\"submitButton\":\"style_submitButton__18BxS\",\"editorContent\":\"style_editorContent__KEm5X\"};","import React, { Component } from 'react';\nimport marked from 'marked';\nimport styles from './style.module.scss';\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/github-gist.css';\n\nmarked.setOptions({\n    breaks: true,\n    highlight: (code) => {\n        return hljs.highlightAuto(code).value;\n    }\n})\n\nclass MarkdownPreviewer extends Component {\n    handleInput = (e) => {\n        const { onChange } = this.props;\n        const value = this.editor.value;\n        e.preventDefault();\n        typeof onChange === 'function' && onChange(value);\n        this.preview.innerHTML = marked(value);\n    }\n\n    componentDidMount() {\n        const { defaultValue } = this.props;\n        if (defaultValue) {\n            this.preview.innerHTML = marked(defaultValue);\n        }\n    }\n\n    render() {\n        const { defaultValue } = this.props;\n        return (\n            <div className={styles.markdownPreviewer}>\n                <textarea\n                    id=\"editor\"\n                    spellCheck=\"false\"\n                    ref={textarea => this.editor = textarea}\n                    onInput={this.handleInput}\n                    defaultValue={defaultValue}\n                ></textarea>\n                <section\n                    id=\"preview\"\n                    ref={section => this.preview = section}\n                ></section>\n            </div>\n        );\n    }\n}\n\nexport default MarkdownPreviewer;\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport MarkdownPreviewer from '../../components/MarkdownPreviewer';\nimport styles from './style.module.scss';\n\nclass EditorPage extends Component {\n    content = undefined;\n\n    componentDidMount() {\n        const { labelsList, milestonesList, dispatch } = this.props;\n        if (!labelsList.length || !milestonesList.length) {\n            dispatch.repository.initEditor();\n        }\n    }\n\n    handleChange = (value) => {\n        this.content = value;\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { dispatch } = this.props;\n        if (this.title && this.content) {\n            dispatch.issues.create({\n                title: this.title.value,\n                body: this.content,\n            })\n        }\n    }\n\n    render() {\n        const { labelsList, milestonesList } = this.props;\n        return (\n        <div className={styles.editorContainer}>\n            <header className={styles.header}>\n                <h2>文章编辑页</h2>\n            </header>\n            <main>\n                <form>\n                    <label className={styles.fileds} htmlFor=\"title\">标题：<input ref={input => this.title = input} type=\"text\" id=\"title\" /></label>\n                    <label className={classNames(styles.fileds, styles.editorContent)} htmlFor=\"editor\">内容：\n                        <MarkdownPreviewer onChange={this.handleChange} />\n                    </label>\n                    <label className={styles.fileds} htmlFor=\"milestone\">\n                        分类：\n                        {milestonesList.map(milestone => {\n                            return (\n                                <label className={styles.checkLabel}>\n                                    <input type=\"radio\" name=\"categories\" value={milestone.id} />\n                                    {milestone.title}\n                                </label>\n                            );\n                        })}\n                    </label>\n                    <label className={styles.fileds} htmlFor=\"labels\">\n                        标签：\n                        {labelsList.map(label => {\n                            return (\n                                <label className={styles.checkLabel}>\n                                    <input type=\"checkbox\" name={`label-${label.name}`} value={label.id}/>\n                                    {label.name}\n                                </label>\n                            );\n                        })}\n                    </label>\n                    <input className={styles.submitButton} onClick={this.handleSubmit} type=\"submit\" value=\"创建\" />\n                </form>\n            </main>\n            <footer>\n                <p>Copyright ©{new Date().getFullYear()} Roy Zhi</p>\n            </footer>\n        </div>\n        );\n    }\n}\n\nconst mapState = createSelector(\n    [\n        store => store.repository.result,\n        store => store.repository.loading,\n        store => store.entities.repositories,\n        store => store.entities.labels,\n        store => store.entities.milestones,\n    ],\n    (\n        result,\n        loading,\n        repositoriesMap,\n        labelsMap,\n        milestonesMap\n    ) => {\n        let labelsList = [], milestonesList = [];\n        const currentRepository = repositoriesMap[result];\n        if (\n            currentRepository &&\n            currentRepository.labels &&\n            currentRepository.labels.nodes &&\n            currentRepository.milestones &&\n            currentRepository.milestones.nodes\n        ) {\n            labelsList = currentRepository.labels.nodes.map(id => labelsMap[id]);\n            milestonesList = currentRepository.milestones.nodes.map(id => milestonesMap[id]);\n        }\n        return {\n            loading,\n            labelsList,\n            milestonesList,\n        }\n    }\n)\n\nexport default connect(mapState)(EditorPage);\n"],"sourceRoot":""}