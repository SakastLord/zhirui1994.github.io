{"version":3,"sources":["pages/Index/style.module.scss","components/Loading/style.module.scss","pages/Article/style.module.scss","components/MarkdownPreviewer/style.module.scss","pages/Article/github.svg","commons/config.js","commons/schemas.js","utils/getToken.js","services/github.js","models/repository.js","models/entities.js","utils/urlSearchParser.js","commons/const.js","models/user.js","models/index.js","services/serviceWorker.js","components/Loading/index.js","pages/Index/index.js","components/MarkdownPreviewer/index.js","pages/Editor/index.js","pages/Article/index.js","pages/App.js","index.js","pages/Editor/style.module.scss"],"names":["module","exports","container","header","navItem","active","articlesContainer","article","articleTitle","articleInfo","articleCategory","articleLabel","loadingContainer","articleBody","issueCommentsContainer","issueComment","commentorAvatar","issueCommentHeader","issueCommentContent","createCommentContainer","createComment","createCommentAvatar","createCommentHeader","commentSwitch","commentorLogin","createCommentInputContainer","createCommentTextarea","createCommentOperator","markdownPreviewer","__webpack_require__","p","config","owner","repo","token","client_id","client_secret","milestone","schema","Entity","label","comment","issue","labels","nodes","comments","repository","issues","milestones","getToken","secret","atob","regexp","RegExp","concat","replace","initIndex","services_github_initIndex","apply","this","arguments","_callee","regenerator_default","a","wrap","_context","prev","next","abrupt","axios","post","query","headers","Authorization","then","response","normalize","data","stop","getSingleIssue","_x","services_github_getSingleIssue","_callee2","number","_context2","getLoginAuthLink","scope","redirect_uri","encodeURIComponent","queryString","Object","keys","map","key","join","userAuth","_x2","_userAuth","_callee3","code","_context3","Accept","getViewer","_x3","_getViewer","_callee4","_context4","viewer","addComment","_x4","_addComment","_callee5","_ref","id","content","_context5","commentEdge","node","commentSchema","object","require","models_repository","name","state","result","loading","reducers","update","payload","merge","effects","dispatch","_initIndex","asyncToGenerator","mark","_","rootState","githubServices","sent","entities","_getSingleIssue","closeCurrentIssue","_closeCurrentIssue","currentRepository","newEntities","repositories","undefined","defineProperty","_x5","_x6","getSearchCode","searchParams","URLSearchParams","window","location","search","get","delete","toString","url","pathname","hash","history","pushState","models","user","auth","accessToken","tokenType","email","login","avatarUrl","getAuthToken","_getAuthToken","userCache","_JSON$parse","access_token","token_type","oauth","_user","localStorage","getItem","JSON","parse","setItem","stringify","_addComment2","callback","issuesMap","commentIssue","push","objectSpread","Boolean","hostname","match","Loading","children","_ref$loading","react_default","createElement","className","styles","react","DEFAULT_MILESTONE","title","DEFAULT_ISSUES_OBJ","pageInfo","totalCount","IndexPage","_this","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","activeMilestone","props","_this$props","issuesList","milestonesList","milestonesMap","labelsMap","components_Loading","classNames","NavLink","to","aria-hidden","moment","createdAt","format","style","background","color","Component","mapState","createSelector","store","repositoriesMap","unshift","issuesObj","connect","marked","setOptions","breaks","highlight","hljs","highlightAuto","value","MarkdownPreviewer","handleInput","e","onChange","editor","preventDefault","preview","innerHTML","defaultValue","_this2","spellCheck","ref","textarea","onInput","section","EditorPage","handleChange","handleSubmit","body","create","editorContainer","fileds","htmlFor","input","type","editorContent","components_MarkdownPreviewer","checkLabel","submitButton","onClick","Date","getFullYear","ArticlePage","currentTarget","height","scrollTop","scrollHeight","handleSubmitComment","currentIssue","_this$props2","params","_this$props3","commentsMap","isUserLoading","dangerouslySetInnerHTML","__html","bodyHTML","author","href","src","alt","class","githubIconUrl","placeholder","issueID","routerConfig","path","exact","component","withRouter","App","HashRouter","Switch","route","Route","d","__webpack_exports__","init","ReactDOM","render","es","pages_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,UAAA,yBAAAC,OAAA,sBAAAC,QAAA,uBAAAC,OAAA,sBAAAC,kBAAA,iCAAAC,QAAA,uBAAAC,aAAA,4BAAAC,YAAA,2BAAAC,gBAAA,+BAAAC,aAAA,kDCAlBX,EAAAC,QAAA,CAAkBW,iBAAA,0FCAlBZ,EAAAC,QAAA,CAAkBC,UAAA,yBAAAO,YAAA,2BAAAC,gBAAA,+BAAAC,aAAA,4BAAAE,YAAA,2BAAAC,uBAAA,sCAAAC,aAAA,4BAAAC,gBAAA,+BAAAC,mBAAA,kCAAAC,oBAAA,mCAAAC,uBAAA,sCAAAC,cAAA,6BAAAC,oBAAA,mCAAAC,oBAAA,mCAAAC,cAAA,6BAAAlB,OAAA,sBAAAmB,eAAA,8BAAAC,4BAAA,2CAAAC,sBAAA,qCAAAC,sBAAA,2DCAlB3B,EAAAC,QAAA,CAAkB2B,kBAAA,uDCDlB5B,EAAAC,QAAiB4B,EAAAC,EAAuB,kNCAzBC,EAAA,CACXC,MAAO,aACPC,KAAM,uBACNC,MAAO,uGACPC,UAAW,uBACXC,cAAe,4CCHNC,EAAY,IAAIC,IAAOC,OAAO,cAC9BC,EAAQ,IAAIF,IAAOC,OAAO,UAC1BE,EAAU,IAAIH,IAAOC,OAAO,YAC5BG,EAAQ,IAAIJ,IAAOC,OAAO,SAAU,CAC7CF,UAAWA,EACXM,OAAQ,CACJC,MAAO,CAACJ,IAEZK,SAAU,CACND,MAAM,CAACH,MAGFK,EAAa,IAAIR,IAAOC,OAAO,eAAgB,CACxDG,QACAK,OAAQ,CACJH,MAAO,CAACF,IAEZC,OAAQ,CACJC,MAAO,CAACJ,IAEZQ,WAAY,CACRJ,MAAO,CAACP,MCrBD,SAASY,IACpB,IAAMC,EAASC,KAAKpB,EAAOG,OACrBkB,EAAS,IAAIC,OAAJ,OAAAC,OAAkBvB,EAAOC,MAAzB,WAAAsB,OAAwCvB,EAAOE,KAA/C,QAA0D,KAEzE,OADciB,EAAOK,QAAQH,EAAO,ICCjC,SAAeI,IAAtB,OAAAC,EAAAC,MAAAC,KAAAC,sDAAO,SAAAC,IAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SACIC,IAAMC,KACT,iCACA,CACIC,MAAK,gDAAAjB,OACoBvB,EAAOC,MAD3B,cAAAsB,OAC6CvB,EAAOE,KADpD,m5CA4CT,CACIuC,QAAS,CACLC,cAAa,UAAAnB,OAAYL,QAGnCyB,KAAK,SAAAC,GACH,OAAOC,YAAUD,EAASE,KAAKA,KAAK/B,WAAYA,MAtDjD,wBAAAmB,EAAAa,SAAAjB,EAAAF,gCA0DA,SAAeoB,EAAtBC,GAAA,OAAAC,EAAAvB,MAAAC,KAAAC,sDAAO,SAAAsB,EAA8BC,GAA9B,OAAArB,EAAAC,EAAAC,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAhB,OAAA,SACIC,IAAMC,KACT,iCACA,CACIC,MAAK,gDAAAjB,OACoBvB,EAAOC,MAD3B,cAAAsB,OAC6CvB,EAAOE,KADpD,qEAAAqB,OAGmB6B,EAHnB,mpCAsCT,CACIX,QAAS,CACLC,cAAa,UAAAnB,OAAYL,QAGnCyB,KAAK,SAAAC,GACH,OAAOC,YAAUD,EAASE,KAAKA,KAAK/B,WAAYA,MAhDjD,wBAAAsC,EAAAN,SAAAI,EAAAvB,gCAoDA,SAAS0B,IACZ,IAAMd,EAAQ,CACVe,MAAO,oBACPC,aAAcC,mBAAkB,4CAChCrD,UAAWJ,EAAOI,WAEhBsD,EAAcC,OAAOC,KAAKpB,GAAOqB,IAAI,SAAAC,GAAG,SAAAvC,OAAOuC,EAAP,KAAAvC,OAAciB,EAAMsB,MAAQC,KAAK,KAC/E,kDAAAxC,OAAmDmC,GAGhD,SAAeM,EAAtBC,GAAA,OAAAC,EAAAvC,MAAAC,KAAAC,sDAAO,SAAAsC,EAAwBC,GAAxB,OAAArC,EAAAC,EAAAC,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,aACc,kFADdiC,EAAAhC,OAAA,SAEIC,IAAMC,KADI,kFACW,CACxB6B,OACAhE,UAAWJ,EAAOI,UAClBC,cAAeL,EAAOK,eAE1B,CACIoC,QAAS,CACL6B,OAAQ,sBAEb3B,KAAK,SAAAC,GACJ,OAAOA,GAAYA,EAASE,QAZ7B,wBAAAuB,EAAAtB,SAAAoB,EAAAvC,gCAgBA,SAAe2C,EAAtBC,GAAA,OAAAC,EAAA9C,MAAAC,KAAAC,sDAAO,SAAA6C,EAAyBvE,GAAzB,OAAA4B,EAAAC,EAAAC,KAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,cAAAuC,EAAAtC,OAAA,SACIC,IAAMC,KAAK,iCAAkC,CAChDC,MAAK,2MAWL,CACIC,QAAS,CACLC,cAAevC,KAGzBwC,KAAK,SAAAC,GACH,OAAOA,GAAYA,EAASE,MAAQF,EAASE,KAAKA,MAAQF,EAASE,KAAKA,KAAK8B,UAnB9E,wBAAAD,EAAA5B,SAAA2B,EAAA9C,gCAuBA,SAAeiD,EAAtBC,GAAA,OAAAC,EAAApD,MAAAC,KAAAC,sDAAO,SAAAmD,EAAAC,GAAA,IAAAC,EAAAC,EAAAhF,EAAA,OAAA4B,EAAAC,EAAAC,KAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,cAA2B8C,EAA3BD,EAA2BC,GAAIC,EAA/BF,EAA+BE,QAAShF,EAAxC8E,EAAwC9E,MAAxCiF,EAAA/C,OAAA,SACIC,IAAMC,KACT,iCACA,CACIC,MAAK,6DAAAjB,OAC+B2D,EAD/B,cAAA3D,OAC8C4D,EAD9C,idAiBT,CACI1C,QAAS,CACLC,cAAevC,KAGzBwC,KAAK,SAAAC,GACH,IAAMlC,EAAUkC,GAAYA,EAASE,MAAQF,EAASE,KAAKA,MACpDF,EAASE,KAAKA,KAAK+B,WAAWQ,YAAYC,KACjD,GAAI5E,EACA,OAAOmC,YAAUnC,EAAS6E,MA9B/B,wBAAAH,EAAArC,SAAAiC,EAAApD,gCCnKP,IAAM4D,EAASC,EAAQ,IAERC,EAAA,CACXC,KAAM,aACNC,MAAO,CACHC,OAAQ,GACRC,SAAS,GAEbC,SAAU,CACNC,OADM,SACCJ,EAAOK,GACV,OAAOT,EAAOU,MAAMN,EAAOK,KAGnCE,QAAS,SAACC,GAAD,MAAe,CACd3E,UADc,eAAA4E,EAAA1C,OAAA2C,EAAA,EAAA3C,CAAA5B,EAAAC,EAAAuE,KAAA,SAAAzE,EACJ0E,EAAGC,GADC,IAAA7D,EAAA,OAAAb,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEXqE,EAAU1F,WAAW+E,QAFV,CAAA5D,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAGNgE,EAASrF,WAAWiF,OAAO,CAC7BF,SAAS,IAJD,cAAA5D,EAAAE,KAAA,EAOOsE,IAPP,YAOV9D,EAPUV,EAAAyE,MAAA,CAAAzE,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EASNgE,EAASQ,SAASZ,OAAOpD,EAASgE,UAT5B,cAAA1E,EAAAE,KAAA,GAUNgE,EAASrF,WAAWiF,OAAO,CAC7BH,OAAQjD,EAASiD,OACjBC,SAAS,IAZD,yBAAA5D,EAAAa,SAAAjB,EAAAF,SAAA,gBAAAqB,EAAAgB,GAAA,OAAAoC,EAAA1E,MAAAC,KAAAC,YAAA,GAgBdmB,eAhBc,eAAA6D,EAAAlD,OAAA2C,EAAA,EAAA3C,CAAA5B,EAAAC,EAAAuE,KAAA,SAAApD,EAgBCC,EAAQqD,GAhBT,IAAA7D,EAAA,OAAAb,EAAAC,EAAAC,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,UAiBXqE,EAAU1F,WAAW+E,QAjBV,CAAAzC,EAAAjB,KAAA,eAAAiB,EAAAjB,KAAA,EAkBNgE,EAASrF,WAAWiF,OAAO,CAC7BF,SAAS,IAnBD,cAAAzC,EAAAjB,KAAA,EAsBOsE,EAA8BtD,GAtBrC,YAsBVR,EAtBUS,EAAAsD,MAAA,CAAAtD,EAAAjB,KAAA,gBAAAiB,EAAAjB,KAAA,EAwBNgE,EAASQ,SAASZ,OAAOpD,EAASgE,UAxB5B,cAAAvD,EAAAjB,KAAA,GAyBNgE,EAASrF,WAAWiF,OAAO,CAC7BH,OAAQjD,EAASiD,OACjBC,SAAS,IA3BD,yBAAAzC,EAAAN,SAAAI,EAAAvB,SAAA,gBAAA4C,EAAAM,GAAA,OAAA+B,EAAAlF,MAAAC,KAAAC,YAAA,GA+BdiF,kBA/Bc,eAAAC,EAAApD,OAAA2C,EAAA,EAAA3C,CAAA5B,EAAAC,EAAAuE,KAAA,SAAApC,EA+BIqC,EAAGC,GA/BP,IAAAZ,EAAAmB,EAAAC,EAAA,OAAAlF,EAAAC,EAAAC,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,UAgCVyD,EAASY,EAAU1F,WAAW8E,SAC9BmB,EAAoBP,EAAUG,SAASM,aAAarB,IAjC1C,CAAAxB,EAAAjC,KAAA,eAmCZ4E,EAAkBrG,WAAQwG,EACpBF,EAAc,CAChBC,aAAavD,OAAAyD,EAAA,EAAAzD,CAAA,GACRkC,EAASmB,IAtCN3C,EAAAjC,KAAA,EAyCNgE,EAASQ,SAASZ,OAAOiB,GAzCnB,wBAAA5C,EAAAtB,SAAAoB,EAAAvC,SAAA,gBAAAyF,EAAAC,GAAA,OAAAP,EAAApF,MAAAC,KAAAC,YAAA,MCftB2D,EAASC,EAAQ,IAERmB,EAAA,CACXjB,KAAM,WACNC,MAAO,CACHsB,aAAc,GACdlG,OAAQ,GACRJ,OAAQ,GACRK,WAAY,GACZH,SAAU,IAEdiF,SAAU,CACNC,OADM,SACCJ,EAAOK,GACV,OAAOT,EAAOU,MAAMN,EAAOK,eCbhC,SAASsB,IACZ,IAAMC,EAAe,IAAIC,gBAAgBC,OAAOC,SAASC,QACnDxD,EAAOoD,EAAaK,IAAI,QAC9B,GAAIzD,EAAM,CACNoD,EAAaM,OAAO,QACpB,IAAMF,EAASJ,EAAaO,WACtBC,EAAG,GAAAzG,OAAMmG,OAAOC,SAASM,UAAtB1G,OAAiCqG,EAAM,IAAArG,OAAOqG,GAAW,IAAzDrG,OAA8DmG,OAAOC,SAASO,MAEvF,OADAR,OAAOS,QAAQC,UAAU,KAAM,KAAMJ,GAC9B5D,EAEP,MAAO,GCVR,ICIDoB,EAASC,EAAQ,ICAR4C,EAAA,CACXC,KDCW,CACX3C,KAAM,OACNC,MAAO,CACHE,SAAS,EACTyC,MAAM,EACNC,YAAa,GACbjF,MAAO,GACPkF,UAAW,GACX7D,OAAQ,CACJ8D,MAAO,GACPxD,GAAI,GACJyD,MAAO,GACPhD,KAAM,GACNqC,IAAK,GACLY,UAAW,KAGnB7C,SAAU,CACNC,OADM,SACCJ,EAAOK,GACV,OAAOT,EAAOU,MAAMN,EAAOK,KAGnCE,QAAS,SAACC,GAAD,MAAe,CACdyC,aADc,eAAAC,EAAAnF,OAAA2C,EAAA,EAAA3C,CAAA5B,EAAAC,EAAAuE,KAAA,SAAAzE,EACD0E,EAAGC,GADF,IAAArC,EAAA2E,EAAAC,EAAAC,EAAAC,EAAA3F,EAAA+E,EAAAa,EAAAC,EAAA,OAAArH,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEXqE,EAAU6B,KAAKxC,QAFJ,CAAA5D,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAGNgE,EAASkC,KAAKtC,OAAO,CACvBF,SAAS,IAJD,UAQV1B,EAAOmD,MACPwB,EAAYM,aAAaC,QDrClB,qBC4BG,CAAApH,EAAAE,KAAA,gBAAA4G,EAeRO,KAAKC,MAAMT,GAHXE,EAZQD,EAYRC,aACAC,EAbQF,EAaRE,WACA3F,EAdQyF,EAcRzF,MAdQrB,EAAAE,KAAA,EAgBOmC,EAAS,GAAAhD,OAAI2H,EAAJ,KAAA3H,OAAkB0H,IAhBlC,YAgBNX,EAhBMpG,EAAAyE,MAAA,CAAAzE,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAkBFgE,EAASkC,KAAKtC,OAAO,CACvBwC,YAAaS,EACbR,UAAWS,EACX3F,MAAOA,EACPgF,MAAM,EACNzC,SAAS,EACTlB,OAAQ0D,IAxBJ,QAAApG,EAAAE,KAAA,qBA2BLgC,EA3BK,CAAAlC,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA4BQ4B,EAASI,GA5BjB,aA4BN+E,EA5BMjH,EAAAyE,QA6BCwC,EAAMF,aA7BP,CAAA/G,EAAAE,KAAA,gBA8BRiH,aAAaI,QD1DR,mBC0D2BF,KAAKG,UAAUP,IA9BvCjH,EAAAE,KAAA,GA+BWmC,EAAS,GAAAhD,OAAI4H,EAAMD,WAAV,KAAA3H,OAAwB4H,EAAMF,eA/BlD,aA+BFX,EA/BEpG,EAAAyE,MAAA,CAAAzE,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAiCEgE,EAASkC,KAAKtC,OAAO,CACvBwC,YAAaW,EAAMF,aACnBR,UAAWU,EAAMD,WACjB3F,MAAO4F,EAAM5F,MACbgF,MAAM,EACNzC,SAAS,EACTlB,OAAQ0D,IAvCR,eAAApG,EAAAE,KAAA,GA6CVgE,EAASkC,KAAKtC,OAAO,CACvBF,SAAS,IA9CG,yBAAA5D,EAAAa,SAAAjB,EAAAF,SAAA,gBAAAqB,EAAAgB,GAAA,OAAA6E,EAAAnH,MAAAC,KAAAC,YAAA,GAiDdgD,WAjDc,eAAA8E,EAAAhG,OAAA2C,EAAA,EAAA3C,CAAA5B,EAAAC,EAAAuE,KAAA,SAAApD,EAAA8B,EAiDsBwB,GAjDtB,IAAAvB,EAAAC,EAAAyE,EAAAzJ,EAAAO,EAAAmJ,EAAAC,EAAA,OAAA/H,EAAAC,EAAAC,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,UAiDF8C,EAjDED,EAiDFC,GAAIC,EAjDFF,EAiDEE,QAASyE,EAjDX3E,EAiDW2E,SACtBnD,EAAU6B,KAAKE,YAlDJ,CAAAnF,EAAAjB,KAAA,eAAAiB,EAAAhB,OAAA,wBAsDVlC,EAtDU,GAAAoB,OAsDCkF,EAAU6B,KAAKG,UAtDhB,KAAAlH,OAsD6BkF,EAAU6B,KAAKE,aAtD5CnF,EAAAjB,KAAA,EAuDMyC,EAAW,CAACK,KAAIC,UAAShF,UAvD/B,YAuDVO,EAvDU2C,EAAAsD,MAAA,CAAAtD,EAAAjB,KAAA,gBAyDNyH,EAAYpD,EAAUG,SAAS5F,QAC/B8I,EAAeD,EAAU3E,IAClBpE,SAASD,MAAMkJ,KAAKrJ,EAAQmF,QA3D7BxC,EAAAjB,KAAA,GA4DNgE,EAASQ,SAASZ,OAAlBrC,OAAAqG,EAAA,EAAArG,CAAA,CACF3C,OAAO2C,OAAAyD,EAAA,EAAAzD,CAAA,GACFuB,EAAK4E,IAEPpJ,EAAQkG,WAhEH,QAkEQ,oBAAbgD,GAA2BA,IAlEtB,yBAAAvG,EAAAN,SAAAI,EAAAvB,SAAA,gBAAA4C,EAAAM,GAAA,OAAA6E,EAAAhI,MAAAC,KAAAC,YAAA,MCtBxB+E,WACA7F,cCKgBkJ,QACW,cAA7BvC,OAAOC,SAASuC,UAEe,UAA7BxC,OAAOC,SAASuC,UAEhBxC,OAAOC,SAASuC,SAASC,MACvB,4MCCSC,GAhBC,SAAAnF,GAAgC,IAA7BoF,EAA6BpF,EAA7BoF,SAA6BC,EAAArF,EAAnBa,QACzB,YAD4C,IAAAwE,KAGpCC,EAAAvI,EAAAwI,cAAA,OAAKC,UAAWC,KAAO7L,kBACnB0L,EAAAvI,EAAAwI,cAAA,KAAGC,UAAU,4BAKjBF,EAAAvI,EAAAwI,cAACG,EAAA,SAAD,KACKN,wBCJXO,GAAoB,CACtBC,MAAO,eACP3F,GAAI,qBAEF4F,GAAqB,CACvBjK,MAAO,GACPkK,SAAU,GAGVC,WAAY,GAGVC,eACF,SAAAA,IAAqB,IAAAC,EAAAvH,OAAAwH,EAAA,EAAAxH,CAAA/B,KAAAqJ,GAAA,QAAAG,EAAAvJ,UAAAwJ,OAANC,EAAM,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAANF,EAAME,GAAA3J,UAAA2J,GAAA,OACjBN,EAAAvH,OAAA8H,EAAA,EAAA9H,CAAA/B,KAAA+B,OAAA+H,EAAA,EAAA/H,CAAAsH,GAAAU,KAAA/J,KAAM0J,KACD1F,MAAQ,CACTgG,gBAAiBhB,IAHJM,mFAQItJ,KAAKiK,MAAlBzF,SACCrF,WAAWU,6CAGf,IACGmK,EAAoBhK,KAAKgE,MAAzBgG,gBADHE,EAQDlK,KAAKiK,MALL/F,EAHCgG,EAGDhG,QACAiG,EAJCD,EAIDC,WACAC,EALCF,EAKDE,eACAC,EANCH,EAMDG,cACAC,EAPCJ,EAODI,UAEJ,OACI3B,EAAAvI,EAAAwI,cAAC2B,GAAD,CAASrG,QAASA,GACdyE,EAAAvI,EAAAwI,cAAA,OAAKC,UAAWC,KAAOvM,WACnBoM,EAAAvI,EAAAwI,cAAA,UAAQC,UAAWC,KAAOtM,QAC1BmM,EAAAvI,EAAAwI,cAAA,WACKwB,EAAenI,IAAI,SAAAvD,GAChB,OACIiK,EAAAvI,EAAAwI,cAAA,QACI1G,IAAKxD,EAAU4E,GACfuF,UAAW2B,IACP1B,KAAOrM,QADUsF,OAAAyD,EAAA,EAAAzD,CAAA,GAGZ+G,KAAOpM,OACJgC,EAAUuK,QAAUe,EAAgBf,SAI/CvK,EAAUuK,WAM3BN,EAAAvI,EAAAwI,cAAA,QAAMC,UAAWC,KAAOnM,mBACnBwN,EAAWlI,IAAI,SAAAlD,GACZ,OACI4J,EAAAvI,EAAAwI,cAAA,WAASC,UAAWC,KAAOlM,QAASsF,IAAKnD,EAAMuE,IAC3CqF,EAAAvI,EAAAwI,cAAC6B,GAAA,EAAD,CAASC,GAAE,YAAA/K,OAAcZ,EAAMyC,SAC3BmH,EAAAvI,EAAAwI,cAAA,MAAIC,UAAWC,KAAOjM,cAAekC,EAAMkK,QAE/CN,EAAAvI,EAAAwI,cAAA,KAAGC,UAAWC,KAAOhM,aACjB6L,EAAAvI,EAAAwI,cAAA,YACID,EAAAvI,EAAAwI,cAAA,KAAGC,UAAU,iBAAiB8B,cAAY,SACzCC,IAAO7L,EAAM8L,WAAWC,OAAO,eAEpCnC,EAAAvI,EAAAwI,cAAA,YACID,EAAAvI,EAAAwI,cAAA,KAAGC,UAAU,gBAAgB8B,cAAY,SACzChC,EAAAvI,EAAAwI,cAAA,QAAMC,UAAWC,KAAO/L,iBAAkBsN,EAActL,EAAML,WAAWuK,QAE7EN,EAAAvI,EAAAwI,cAAA,YACID,EAAAvI,EAAAwI,cAAA,KAAGC,UAAU,aAAa8B,cAAY,SACrC5L,EAAMC,OAAOC,MAAMgD,IAAI,SAAAqB,GACpB,IAAMzE,EAAQyL,EAAUhH,GACxB,OACIqF,EAAAvI,EAAAwI,cAAA,QACI1G,IAAKrD,EAAMyE,GACXuF,UAAWC,KAAO9L,aAClB+N,MAAO,CACHC,WAAU,IAAArL,OAAMd,EAAMoM,SAGzBpM,EAAMkF,uBAzEvCmH,aAyFlBC,GAAWC,aACb,CACI,SAAAC,GAAK,OAAIA,EAAMlM,WAAW8E,QAC1B,SAAAoH,GAAK,OAAIA,EAAMlM,WAAW+E,SAC1B,SAAAmH,GAAK,OAAIA,EAAMrG,SAASM,cACxB,SAAA+F,GAAK,OAAIA,EAAMrG,SAAS5F,QACxB,SAAAiM,GAAK,OAAIA,EAAMrG,SAAS3F,YACxB,SAAAgM,GAAK,OAAIA,EAAMrG,SAAShG,SAE5B,SACIiF,EACAC,EACAoH,EACArD,EACAoC,EACAC,GAEA,IAAMnL,EAAamM,EAAgBrH,GAC7BmG,EAAiBrI,OAAOC,KAAKqI,GAAepI,IAAI,SAAAqB,GAAE,OAAI+G,EAAc/G,KACtE8G,EAAeX,QACfW,EAAemB,QAAQvC,IAE3B,IAAIwC,EAAYtC,GAIhB,OAHI/J,GAAcA,EAAWC,SACzBoM,EAAYrM,EAAWC,QAEpB,CACH8E,UACAoG,YACAD,gBACAD,iBACAD,WAAYqB,EAAUvM,MAAMgD,IAAI,SAAAqB,GAAE,OAAI2E,EAAU3E,KAChD6F,SAAUqC,EAAUrC,SACpBC,WAAYoC,EAAUpC,cAKnBqC,eAAQN,GAARM,CAAkBpC,0EC9IjCqC,KAAOC,WAAW,CACdC,QAAQ,EACRC,UAAW,SAACrJ,GACR,OAAOsJ,KAAKC,cAAcvJ,GAAMwJ,aAwCzBC,8MAnCXC,YAAc,SAACC,GAAM,IACTC,EAAa9C,EAAKW,MAAlBmC,SACFJ,EAAQ1C,EAAK+C,OAAOL,MAC1BG,EAAEG,iBACkB,oBAAbF,GAA2BA,EAASJ,GAC3C1C,EAAKiD,QAAQC,UAAYd,KAAOM,uFAGhB,IACRS,EAAiBzM,KAAKiK,MAAtBwC,aACJA,IACAzM,KAAKuM,QAAQC,UAAYd,KAAOe,qCAI/B,IAAAC,EAAA1M,KACGyM,EAAiBzM,KAAKiK,MAAtBwC,aACR,OACI9D,EAAAvI,EAAAwI,cAAA,OAAKC,UAAWC,KAAO7K,mBACnB0K,EAAAvI,EAAAwI,cAAA,YACItF,GAAG,SACHqJ,WAAW,QACXC,IAAK,SAAAC,GAAQ,OAAIH,EAAKL,OAASQ,GAC/BC,QAAS9M,KAAKkM,YACdO,aAAcA,IAElB9D,EAAAvI,EAAAwI,cAAA,WACItF,GAAG,UACHsJ,IAAK,SAAAG,GAAO,OAAIL,EAAKH,QAAUQ,aA7BnB7B,gCCP1B8B,8MACFC,aAAe,SAACjB,OAIhBkB,aAAe,SAACf,GACZA,EAAEG,iBADgB,IAEV9H,EAAa8E,EAAKW,MAAlBzF,SACJ8E,EAAKL,OAASK,EAAK6D,MACnB3I,EAASpF,OAAOgO,OAAO,CACnBnE,MAAOK,EAAKL,MAAM+C,MAClBmB,KAAM7D,EAAK6D,KAAKnB,iFAKnB,IAAAU,EAAA1M,KACL,OACA2I,EAAAvI,EAAAwI,cAAA,OAAKC,UAAWC,KAAOuE,iBACnB1E,EAAAvI,EAAAwI,cAAA,UAAQC,UAAWC,KAAOtM,QACtBmM,EAAAvI,EAAAwI,cAAA,6CAEJD,EAAAvI,EAAAwI,cAAA,YACID,EAAAvI,EAAAwI,cAAA,YACID,EAAAvI,EAAAwI,cAAA,SAAOC,UAAWC,KAAOwE,OAAQC,QAAQ,SAAzC,qBAAoD5E,EAAAvI,EAAAwI,cAAA,SAAOgE,IAAK,SAAAY,GAAK,OAAId,EAAKzD,MAAQuE,GAAOC,KAAK,OAAOnK,GAAG,WAC5GqF,EAAAvI,EAAAwI,cAAA,SAAOC,UAAW2B,IAAW1B,KAAOwE,OAAQxE,KAAO4E,eAAgBH,QAAQ,UAA3E,qBACI5E,EAAAvI,EAAAwI,cAAC+E,GAAD,CAAmBvB,SAAUpM,KAAKiN,gBAEtCtE,EAAAvI,EAAAwI,cAAA,SAAOC,UAAWC,KAAOwE,OAAQC,QAAQ,aAAzC,qBAEI5E,EAAAvI,EAAAwI,cAAA,SAAOC,UAAWC,KAAO8E,YAAYjF,EAAAvI,EAAAwI,cAAA,SAAO6E,KAAK,QAAQ1J,KAAK,eAAKiI,MAAM,MAAzE,iBACArD,EAAAvI,EAAAwI,cAAA,SAAOC,UAAWC,KAAO8E,YAAYjF,EAAAvI,EAAAwI,cAAA,SAAO6E,KAAK,QAAQ1J,KAAK,eAAKiI,MAAM,MAAzE,iBACArD,EAAAvI,EAAAwI,cAAA,SAAOC,UAAWC,KAAO8E,YAAYjF,EAAAvI,EAAAwI,cAAA,SAAO6E,KAAK,QAAQ1J,KAAK,eAAKiI,MAAM,MAAzE,kBAEJrD,EAAAvI,EAAAwI,cAAA,SAAOC,UAAWC,KAAOwE,OAAQC,QAAQ,UAAzC,qBAEI5E,EAAAvI,EAAAwI,cAAA,SAAOC,UAAWC,KAAO8E,YAAYjF,EAAAvI,EAAAwI,cAAA,SAAO6E,KAAK,WAAW1J,KAAK,gBAAMiI,MAAM,MAA7E,iBACArD,EAAAvI,EAAAwI,cAAA,SAAOC,UAAWC,KAAO8E,YAAYjF,EAAAvI,EAAAwI,cAAA,SAAO6E,KAAK,WAAW1J,KAAK,gBAAMiI,MAAM,MAA7E,iBACArD,EAAAvI,EAAAwI,cAAA,SAAOC,UAAWC,KAAO8E,YAAYjF,EAAAvI,EAAAwI,cAAA,SAAO6E,KAAK,WAAW1J,KAAK,gBAAMiI,MAAM,MAA7E,kBAEJrD,EAAAvI,EAAAwI,cAAA,SAAOC,UAAWC,KAAO+E,aAAcC,QAAS9N,KAAKkN,aAAcO,KAAK,SAASzB,MAAM,mBAG/FrD,EAAAvI,EAAAwI,cAAA,cACID,EAAAvI,EAAAwI,cAAA,2BAAe,IAAImF,MAAOC,cAA1B,qBA5CS9C,aAmDVO,iBAAUuB,sDC9CnBiB,8MAaF/B,YAAc,SAACC,GACXA,EAAEG,iBADe,IAET4B,EAAkB/B,EAAlB+B,cACRA,EAAcnD,MAAMoD,OAAS,OAC7BD,EAAcnD,MAAMoD,OAASD,EAAcE,UAAYF,EAAcG,aAAe,QAGxFC,oBAAsB,SAACnC,GACnBA,EAAEG,iBACF,IAAM/I,EAAU+F,EAAKxK,QAAQkN,MAC7B,GAAIzI,EAAS,KAAA2G,EAC0BZ,EAAKW,MAAhCzF,EADC0F,EACD1F,SAAU+J,EADTrE,EACSqE,aAClB/J,EAASkC,KAAKzD,WAAW,CAACK,GAAIiL,EAAajL,GAAIC,UAASyE,SAAU,WAC9DsB,EAAKxK,QAAQkN,MAAQ,2FAzBb,IAAAwC,EACYxO,KAAKiK,MAAzBzF,EADQgK,EACRhK,SACFhD,EAFUgN,EACEjG,MACGkG,OAAOjN,OAC5BgD,EAASkC,KAAKO,eACdzC,EAASrF,WAAWiC,eAAeI,kDAIdxB,KAAKiK,MAAlBzF,SACCrF,WAAW+F,qDAqBf,IAAAwH,EAAA1M,KAAA0O,EASD1O,KAAKiK,MAPL/F,EAFCwK,EAEDxK,QACAoG,EAHCoE,EAGDpE,UACAqE,EAJCD,EAIDC,YACAJ,EALCG,EAKDH,aACAlE,EANCqE,EAMDrE,cACArH,EAPC0L,EAOD1L,OACA4L,EARCF,EAQDE,cAGJ,OACIjG,EAAAvI,EAAAwI,cAAC2B,GAAD,CAASrG,QAASA,GACdyE,EAAAvI,EAAAwI,cAAA,OAAKC,UAAWC,KAAOvM,WACnBoM,EAAAvI,EAAAwI,cAAA,cACID,EAAAvI,EAAAwI,cAAA,UAAK2F,EAAatF,OAClBN,EAAAvI,EAAAwI,cAAA,KAAGC,UAAWC,KAAOhM,aACjB6L,EAAAvI,EAAAwI,cAAA,YACID,EAAAvI,EAAAwI,cAAA,KAAGC,UAAU,iBAAiB8B,cAAY,SACzCC,IAAO2D,EAAa1D,WAAWC,OAAO,eAE3CnC,EAAAvI,EAAAwI,cAAA,YACID,EAAAvI,EAAAwI,cAAA,KAAGC,UAAU,gBAAgB8B,cAAY,SACzChC,EAAAvI,EAAAwI,cAAA,QAAMC,UAAWC,KAAO/L,iBACnBwR,EAAa7P,WAAa2L,EAAckE,EAAa7P,WAAWuK,QAGzEN,EAAAvI,EAAAwI,cAAA,YACID,EAAAvI,EAAAwI,cAAA,KAAGC,UAAU,aAAa8B,cAAY,SACrC4D,EAAavP,QAAUuP,EAAavP,OAAOC,MAAMgD,IAAI,SAAAqB,GAClD,IAAMzE,EAAQyL,EAAUhH,GACxB,OACIqF,EAAAvI,EAAAwI,cAAA,QACI1G,IAAKrD,EAAMyE,GACXuF,UAAWC,KAAO9L,aAClB+N,MAAO,CACHC,WAAU,IAAArL,OAAMd,EAAMoM,SAGzBpM,EAAMkF,WAO/B4E,EAAAvI,EAAAwI,cAAA,YACID,EAAAvI,EAAAwI,cAAA,WACIC,UAAW2B,IAAW1B,KAAO5L,YAAa,iBAC1C2R,wBAAyB,CAAEC,OAAQP,EAAaQ,YAEpDpG,EAAAvI,EAAAwI,cAAA,OAAKC,UAAWC,KAAO3L,wBAClBoR,EAAarP,UAAYqP,EAAarP,SAASD,MAAMgD,IAAI,SAAAqB,GACtD,IAAMxE,EAAU6P,EAAYrL,GAC5B,GAAIxE,EAAS,KACDkQ,EAAWlQ,EAAXkQ,OACR,OACIrG,EAAAvI,EAAAwI,cAAA,WAAS1G,IAAKpD,EAAQwE,GAAIuF,UAAWC,KAAO1L,cACxCuL,EAAAvI,EAAAwI,cAAA,KAAGC,UAAWC,KAAOzL,gBAAiB4R,KAAMD,EAAO5I,KAC/CuC,EAAAvI,EAAAwI,cAAA,OAAKsG,IAAKF,EAAOhI,UAAWmI,IAAI,gCAEpCxG,EAAAvI,EAAAwI,cAAA,KAAGC,UAAWC,KAAOxL,oBACjBqL,EAAAvI,EAAAwI,cAAA,KAAGqG,KAAMD,EAAO5I,KAAKuC,EAAAvI,EAAAwI,cAAA,UAAKoG,EAAOjI,QACjC4B,EAAAvI,EAAAwI,cAAA,YAAOgC,IAAO9L,EAAQ+L,WAAWC,OAAO,yBAE5CnC,EAAAvI,EAAAwI,cAAA,WACIC,UAAW2B,IAAW1B,KAAOvL,oBAAqB,iBAClDsR,wBAAyB,CAAEC,OAAQhQ,EAAQiQ,aAKvD,OAAO,OAGfpG,EAAAvI,EAAAwI,cAAA,WAASC,UAAWC,KAAOtL,wBACvBmL,EAAAvI,EAAAwI,cAAA,OAAKC,UAAWC,KAAOrL,eAClBuF,EAAOM,GACHqF,EAAAvI,EAAAwI,cAAA,OAAKC,UAAWC,KAAOpL,qBACpBiL,EAAAvI,EAAAwI,cAAA,OAAKsG,IAAKlM,EAAOgE,UAAWmI,IAAI,gCAEnCxG,EAAAvI,EAAAwI,cAAA,KACGC,UAAWC,KAAOpL,oBAClBuR,KAAMvN,KAELkN,EACGjG,EAAAvI,EAAAwI,cAAA,KAAGwG,MAAM,6CAETzG,EAAAvI,EAAAwI,cAAA,OAAKsG,IAAKG,KAAeF,IAAI,gCAIzCxG,EAAAvI,EAAAwI,cAAA,OAAKC,UAAWC,KAAOnL,qBACnBgL,EAAAvI,EAAAwI,cAAA,QAAMC,UAAW2B,IAAW1B,KAAOlL,cAAekL,KAAOpM,SAAzD,gBACAiM,EAAAvI,EAAAwI,cAAA,QAAMC,UAAWC,KAAOlL,eAAxB,iBACGoF,EAAOM,KAAOsL,GACbjG,EAAAvI,EAAAwI,cAAA,QAAMC,UAAWC,KAAOjL,gBAAxB,qBAAiD8K,EAAAvI,EAAAwI,cAAA,KAAGqG,KAAMvN,KAAT,kBAGzDiH,EAAAvI,EAAAwI,cAAA,OAAKC,UAAWC,KAAOhL,6BACnB6K,EAAAvI,EAAAwI,cAAA,YAAUgE,IAAK,SAAAC,GAAQ,OAAIH,EAAK5N,QAAU+N,GAAUC,QAAS9M,KAAKkM,YAAarD,UAAWC,KAAO/K,sBAAuBuR,YAAY,gDAExI3G,EAAAvI,EAAAwI,cAAA,OAAKC,UAAWC,KAAO9K,uBACnB2K,EAAAvI,EAAAwI,cAAA,UAAQkF,QAAS9N,KAAKsO,qBAAtB,8BAtIdpD,aAkJpBC,GAAWC,aACb,CACI,SAAAC,GAAK,OAAIA,EAAMlM,WAAW8E,QAC1B,SAAAoH,GAAK,OAAIA,EAAMlM,WAAW+E,SAC1B,SAAAmH,GAAK,OAAIA,EAAMrG,SAASM,cACxB,SAAA+F,GAAK,OAAIA,EAAMrG,SAAS5F,QACxB,SAAAiM,GAAK,OAAIA,EAAMrG,SAAS3F,YACxB,SAAAgM,GAAK,OAAIA,EAAMrG,SAAShG,QACxB,SAAAqM,GAAK,OAAIA,EAAMrG,SAAS9F,UACxB,SAAAmM,GAAK,OAAIA,EAAM3E,KAAK1D,QACpB,SAAAqI,GAAK,OAAIA,EAAM3E,KAAKxC,UAExB,SACID,EACAC,EACAoH,EACArD,EACAoC,EACAC,EACAqE,EACA3L,EACA4L,GAEA,IAAIW,EAAShB,EAAe,GACtBpP,EAAamM,EAAgBrH,GAOnC,OANI9E,IACAoQ,EAAUpQ,EAAWJ,OAErBwQ,IACAhB,EAAetG,EAAUsH,IAEtB,CACHrL,UACAqK,eACAlE,gBACAC,YACAqE,cACA3L,SACA4L,mBC7LNY,GAAe,CACjB,CACIC,KAAM,IACNC,OAAO,EACPC,UAAWtG,IAEf,CACIoG,KAAM,UACNC,OAAO,EACPC,UAAW3C,IAEf,CACIyC,KAAM,mBACNC,OAAO,EACPC,UDqLQlE,YAAQN,GAARM,CAAkBmE,aAAW3B,OChK9B4B,GAjBH,WACR,OACIlH,EAAAvI,EAAAwI,cAACkH,EAAA,EAAD,KACInH,EAAAvI,EAAAwI,cAACmH,EAAA,EAAD,KACKP,GAAavN,IAAI,SAAA+N,GAAK,OAClBrH,EAAAvI,EAAAwI,cAACqH,EAAA,EAAD,CACG/N,IAAK8N,EAAMP,KACXA,KAAMO,EAAMP,KACZC,MAAOM,EAAMN,MACbC,UAAWK,EAAML,wBCjCzCzR,EAAAgS,EAAAC,EAAA,0BAAA9E,KASO,IAAMA,GAAQ+E,eAAK,CACtB3J,WAGJ4J,IAASC,OACL3H,EAAAvI,EAAAwI,cAAC2H,EAAA,EAAD,CAAUlF,MAAOA,IACb1C,EAAAvI,EAAAwI,cAAC4H,GAAD,OAEJC,SAASC,eAAe,SPgHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9P,KAAK,SAAA+P,GACjCA,EAAaC,kCQlInB1U,EAAAC,QAAA,CAAkB+Q,gBAAA,+BAAA7Q,OAAA,sBAAA8Q,OAAA,sBAAAM,WAAA,0BAAAC,aAAA,4BAAAH,cAAA","file":"static/js/main.d4c2349c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__1CTEx\",\"header\":\"style_header__1VHED\",\"navItem\":\"style_navItem__36neS\",\"active\":\"style_active__3WdfJ\",\"articlesContainer\":\"style_articlesContainer__2rKNV\",\"article\":\"style_article__g0wxV\",\"articleTitle\":\"style_articleTitle__17Rw5\",\"articleInfo\":\"style_articleInfo__3Tym_\",\"articleCategory\":\"style_articleCategory__f0xgF\",\"articleLabel\":\"style_articleLabel__19l4_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingContainer\":\"style_loadingContainer__3W5OD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__vgro-\",\"articleInfo\":\"style_articleInfo__3N387\",\"articleCategory\":\"style_articleCategory__2Yp5u\",\"articleLabel\":\"style_articleLabel__EAk0-\",\"articleBody\":\"style_articleBody__nw0TM\",\"issueCommentsContainer\":\"style_issueCommentsContainer__31mga\",\"issueComment\":\"style_issueComment__14LFL\",\"commentorAvatar\":\"style_commentorAvatar__vjQHI\",\"issueCommentHeader\":\"style_issueCommentHeader__D6cu-\",\"issueCommentContent\":\"style_issueCommentContent__cd6g6\",\"createCommentContainer\":\"style_createCommentContainer__1xO-G\",\"createComment\":\"style_createComment__KcpwS\",\"createCommentAvatar\":\"style_createCommentAvatar__1l2eW\",\"createCommentHeader\":\"style_createCommentHeader__3AxDl\",\"commentSwitch\":\"style_commentSwitch__3295I\",\"active\":\"style_active__1xMn4\",\"commentorLogin\":\"style_commentorLogin__1EBPS\",\"createCommentInputContainer\":\"style_createCommentInputContainer__2CEda\",\"createCommentTextarea\":\"style_createCommentTextarea__2i0zE\",\"createCommentOperator\":\"style_createCommentOperator__2AZGN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"markdownPreviewer\":\"style_markdownPreviewer__2WsNP\"};","module.exports = __webpack_public_path__ + \"static/media/github.c9e82c1f.svg\";","export default {\n    owner: 'zhirui1994',\n    repo: 'zhirui1994.github.io',\n    token: \"MSt6aGlydWkxOTk0KzBhOGZmMjAwNWM3M2NmNmM1YzEzYWQyZmRkZjhjN2E4MDU0NzdlK3poaXJ1aTE5OTQuZ2l0aHViLmlvKzg=\",\n    client_id: '635ab95d562259d5e20a',\n    client_secret: 'e795e7e409ce731cf304facd92aecd305c774731',\n}","import { schema } from 'normalizr';\n\nexport const milestone = new schema.Entity('milestones');\nexport const label = new schema.Entity('labels');\nexport const comment = new schema.Entity('comments');\nexport const issue = new schema.Entity('issues', {\n    milestone: milestone,\n    labels: {\n        nodes: [label]\n    },\n    comments: {\n        nodes:[comment]\n    },\n});\nexport const repository = new schema.Entity('repositories', {\n    issue,\n    issues: {\n        nodes: [issue]\n    },\n    labels: {\n        nodes: [label]\n    },\n    milestones: {\n        nodes: [milestone]\n    },\n})","import config from '../commons/config';\n\nexport default function getToken() {\n    const secret = atob(config.token);\n    const regexp = new RegExp(`(\\\\+${config.owner}\\\\+|\\\\+${config.repo}\\\\+)`,'g');\n    const token = secret.replace(regexp,'');\n    return token;\n}","import axios from 'axios';\nimport { normalize } from 'normalizr';\nimport config from '../commons/config';\nimport { repository, comment as commentSchema } from '../commons/schemas';\nimport getToken from '../utils/getToken';\n\nexport async function initIndex() {\n    return axios.post(\n        'https://api.github.com/graphql',\n        {\n            query: `query { \n                repository(owner: \"${config.owner}\", name: \"${config.repo}\") {\n                    id,\n                    labels(first: 100) {\n                        nodes {\n                            id,\n                            name,\n                            color,\n                        } \n                    },\n                    milestones(first:100) {\n                        nodes {\n                            id,\n                            number,\n                            state,\n                            title,\n                        }\n                    },\n                    issues(last:20, states:OPEN) {\n                        pageInfo {\n                            endCursor,\n                            startCursor,\n                            hasNextPage,\n                            hasPreviousPage\n                        },\n                        totalCount,\n                        nodes {\n                            id,\n                            title,\n                            number,\n                            createdAt,\n                            milestone {\n                                id\n                            },\n                            labels(first:100) {\n                                nodes {\n                                    id,\n                                }\n                            }\n                        }\n                    }\n                }\n            }`\n        },\n        {\n            headers: {\n                Authorization: `bearer ${getToken()}`\n            },\n        }\n    ).then(response => {\n        return normalize(response.data.data.repository, repository);\n    });\n}\n\nexport async function getSingleIssue(number) {\n    return axios.post(\n        'https://api.github.com/graphql',\n        {\n            query: `query { \n                repository(owner: \"${config.owner}\", name: \"${config.repo}\") {\n                    id,\n                    issue(number: ${number}) {\n                        id,\n                        title,\n                        number,\n                        bodyHTML,\n                        createdAt,\n                        milestone {\n                            id,\n                            number,\n                            state,\n                            title,\n                        },\n                        labels(first:100) {\n                            nodes {\n                                id,\n                                name,\n                                color,\n                            }\n                        },\n                        comments(last: 20) {\n                            nodes {\n                                id,\n                                author {\n                                    avatarUrl,\n                                    login,\n                                    url,\n                                },\n                                bodyHTML,\n                                createdAt,\n                            }\n                        }\n                    }\n                }\n            }`\n        },\n        {\n            headers: {\n                Authorization: `bearer ${getToken()}`\n            },\n        }\n    ).then(response => {\n        return normalize(response.data.data.repository, repository);\n    })\n}\n\nexport function getLoginAuthLink() {\n    const query = {\n        scope: 'public_repo, user',\n        redirect_uri: encodeURIComponent(`https://zhirui1994.github.io/#/article/1`),\n        client_id: config.client_id,\n    }\n    const queryString = Object.keys(query).map(key => `${key}=${query[key]}`).join('&');\n    return `https://github.com/login/oauth/authorize?${queryString}`\n}\n\nexport async function userAuth(code) {\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token'\n    return axios.post(proxyUrl, {\n        code,\n        client_id: config.client_id,\n        client_secret: config.client_secret,\n    },\n    {\n        headers: {\n            Accept: 'application/json'\n        }\n    }).then(response => {\n        return response && response.data;\n    })\n}\n\nexport async function getViewer(token) {\n    return axios.post('https://api.github.com/graphql', {\n        query: `query { \n            viewer {\n                email,\n                id,\n                login,\n                name,\n                url,\n                avatarUrl, \n            }\n        }`\n        },\n        {\n            headers: {\n                Authorization: token,\n            }\n        }\n    ).then(response => {\n        return response && response.data && response.data.data && response.data.data.viewer;\n    });\n}\n\nexport async function addComment({id, content, token}) {\n    return axios.post(\n        'https://api.github.com/graphql',\n        {\n            query: `mutation {\n                addComment(input:{subjectId: \"${id}\", body: \"${content}\"}) {\n                    commentEdge {\n                        node {\n                            id,\n                            bodyHTML,\n                            createdAt,\n                            author {\n                                avatarUrl,\n                                login,\n                                url,\n                            },\n                        }\n                    }\n                }\n            }`\n        },\n        {\n            headers: {\n                Authorization: token,\n            }\n        }\n    ).then(response => {\n        const comment = response && response.data && response.data.data\n            && response.data.data.addComment.commentEdge.node;\n        if (comment) {\n            return normalize(comment, commentSchema)\n        }\n    });\n}","import * as githubServices from '../services/github'\n\nconst object = require('lodash/fp/object');\n\nexport default {\n    name: 'repository',\n    state: {\n        result: '',\n        loading: true,\n    },\n    reducers: {\n        update(state, payload) {\n            return object.merge(state, payload);\n        }\n    },\n    effects: (dispatch) => ({\n        async initIndex(_, rootState) {\n            if (!rootState.repository.loading) {\n                await dispatch.repository.update({\n                    loading: true,\n                });\n            }\n            const response = await githubServices.initIndex()\n            if (response) {\n                await dispatch.entities.update(response.entities);\n                await dispatch.repository.update({\n                    result: response.result,\n                    loading: false,\n                });\n            }\n        },\n        async getSingleIssue(number, rootState) {\n            if (!rootState.repository.loading) {\n                await dispatch.repository.update({\n                    loading: true,\n                });\n            }\n            const response = await githubServices.getSingleIssue(number)\n            if (response) {\n                await dispatch.entities.update(response.entities);\n                await dispatch.repository.update({\n                    result: response.result,\n                    loading: false,\n                })\n            }\n        },\n        async closeCurrentIssue(_, rootState) {\n            const result = rootState.repository.result;\n            const currentRepository = rootState.entities.repositories[result];\n            if (currentRepository) {\n                currentRepository.issue = undefined;\n                const newEntities = {\n                    repositories: {\n                        [result]: currentRepository\n                    }\n                };\n                await dispatch.entities.update(newEntities);\n            }\n        }\n    })\n}","const object = require('lodash/fp/object');\n\nexport default {\n    name: 'entities',\n    state: {\n        repositories: {},\n        issues: {},\n        labels: {},\n        milestones: {},\n        comments: {},\n    },\n    reducers: {\n        update(state, payload) {\n            return object.merge(state, payload)\n        },\n    }\n}","export function getSearchCode() {\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code');\n    if (code) {\n        searchParams.delete('code');\n        const search = searchParams.toString();\n        const url = `${window.location.pathname}${search ? `?${search}` : ''}${window.location.hash}`;\n        window.history.pushState(null, null, url)\n        return code;\n    } else {\n        return '';\n    }\n}","export const USER_AUTH = 'GITHUB_USER_AUTH';","import { userAuth, getViewer, addComment } from '../services/github';\nimport { getSearchCode } from '../utils/urlSearchParser';\nimport { USER_AUTH } from '../commons/const';\n\nconst object = require('lodash/fp/object');\n\nexport default {\n    name: 'user',\n    state: {\n        loading: false,\n        auth: false,\n        accessToken: '',\n        scope: '',\n        tokenType: '',\n        viewer: {\n            email: '',\n            id: '',\n            login: '',\n            name: '',\n            url: '',\n            avatarUrl: ''\n        }\n    },\n    reducers: {\n        update(state, payload) {\n            return object.merge(state, payload)\n        },\n    },\n    effects: (dispatch) => ({\n        async getAuthToken(_, rootState) {\n            if (!rootState.user.loading) {\n                await dispatch.user.update({\n                    loading: true,\n                })\n            }\n\n            const code = getSearchCode();\n            const userCache = localStorage.getItem(USER_AUTH);\n            if (userCache ) {\n                const { \n                    access_token,\n                    token_type,\n                    scope,\n                } = JSON.parse(userCache);\n                const user = await getViewer(`${token_type} ${access_token}`)\n                if (user) {\n                    await dispatch.user.update({\n                        accessToken: access_token,\n                        tokenType: token_type,\n                        scope: scope,\n                        auth: true,\n                        loading: false,\n                        viewer: user,\n                    })\n                }\n            } else if (code) {\n                const oauth = await userAuth(code);\n                if (oauth && oauth.access_token) {\n                    localStorage.setItem(USER_AUTH, JSON.stringify(oauth));\n                    const user = await getViewer(`${oauth.token_type} ${oauth.access_token}`)\n                    if (user) {\n                        await dispatch.user.update({\n                            accessToken: oauth.access_token,\n                            tokenType: oauth.token_type,\n                            scope: oauth.scope,\n                            auth: true,\n                            loading: false,\n                            viewer: user,\n                        })\n                    }\n                }\n            }\n\n            await dispatch.user.update({\n                loading: false,\n            })\n        },\n        async addComment({id, content, callback}, rootState) {\n            if (!rootState.user.accessToken) {\n                return;\n            }\n\n            const token = `${rootState.user.tokenType} ${rootState.user.accessToken}`;\n            const comment = await addComment({id, content, token});\n            if (comment) {\n                const issuesMap = rootState.entities.issues;\n                const commentIssue = issuesMap[id];\n                commentIssue.comments.nodes.push(comment.result)\n                await dispatch.entities.update({\n                    issues: {\n                        [id]: commentIssue,\n                    },\n                    ...comment.entities,\n                })\n                typeof callback === 'function' && callback();\n            }\n        }\n    })\n}","import repository from './repository';\nimport entities from './entities';\nimport user from './user';\n\nexport default {\n    user,\n    entities,\n    repository,\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Fragment } from 'react';\nimport styles from './style.module.scss';\n\nconst Loading = ({ children, loading=true }) => {\n    if (loading) {\n        return (\n            <div className={styles.loadingContainer} >\n                <i className=\"fa fa-spinner fa-pulse\"></i>\n            </div>\n        );\n    } else {\n        return (\n            <Fragment>\n                {children}\n            </Fragment>\n        );\n    }\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { createSelector } from 'reselect';\nimport { NavLink } from 'react-router-dom';\nimport Loading from '../../components/Loading'\nimport styles from './style.module.scss'\n\nconst DEFAULT_MILESTONE = {\n    title: '最新',\n    id: 'default_milestone'\n}\nconst DEFAULT_ISSUES_OBJ = {\n    nodes: [],\n    pageInfo: {\n\n    },\n    totalCount: 0,\n}\n\nclass IndexPage extends Component {\n    constructor(...args) {\n        super(args);\n        this.state = {\n            activeMilestone: DEFAULT_MILESTONE\n        }\n    }\n\n    componentDidMount() {\n        const { dispatch } = this.props;\n        dispatch.repository.initIndex();\n    }\n\n    render() {\n        const { activeMilestone } = this.state;\n        const {\n            loading,\n            issuesList,\n            milestonesList,\n            milestonesMap,\n            labelsMap,\n        } = this.props;\n        return (\n            <Loading loading={loading}>\n                <div className={styles.container}>\n                    <header className={styles.header}>\n                    <nav>\n                        {milestonesList.map(milestone => {\n                            return (\n                                <span\n                                    key={milestone.id}\n                                    className={classNames(\n                                        styles.navItem,\n                                        {\n                                            [styles.active]:\n                                                milestone.title === activeMilestone.title,\n                                        },\n                                    )}\n                                >\n                                    {milestone.title}\n                                </span>\n                            )\n                        })}\n                    </nav>\n                    </header>\n                    <main className={styles.articlesContainer}>\n                        {issuesList.map(issue => {\n                            return (\n                                <article className={styles.article} key={issue.id}>\n                                    <NavLink to={`/article/${issue.number}`}>\n                                        <h3 className={styles.articleTitle}>{issue.title}</h3>\n                                    </NavLink>\n                                    <p className={styles.articleInfo}>\n                                        <span>\n                                            <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                                            {moment(issue.createdAt).format('YYYY-MM-DD')}\n                                        </span>\n                                        <span>\n                                            <i className=\"fa fa-th-list\" aria-hidden=\"true\"></i>\n                                            <span className={styles.articleCategory}>{milestonesMap[issue.milestone].title}</span>\n                                        </span>\n                                        <span>\n                                            <i className=\"fa fa-tags\" aria-hidden=\"true\"></i>\n                                            {issue.labels.nodes.map(id => {\n                                                const label = labelsMap[id]\n                                                return (\n                                                    <span\n                                                        key={label.id}\n                                                        className={styles.articleLabel}\n                                                        style={{\n                                                            background: `#${label.color}`,\n                                                        }}\n                                                    >\n                                                        {label.name}\n                                                    </span>\n                                                )\n                                            })}\n                                        </span>\n                                    </p>\n                                </article>\n                            )\n                        })}\n                    </main>\n                </div>\n            </Loading>\n        );\n    }\n}\n\nconst mapState = createSelector(\n    [\n        store => store.repository.result,\n        store => store.repository.loading,\n        store => store.entities.repositories,\n        store => store.entities.issues,\n        store => store.entities.milestones,\n        store => store.entities.labels,\n    ],\n    (\n        result,\n        loading,\n        repositoriesMap,\n        issuesMap,\n        milestonesMap,\n        labelsMap,\n    ) => {\n        const repository = repositoriesMap[result];\n        const milestonesList = Object.keys(milestonesMap).map(id => milestonesMap[id]);\n        if (milestonesList.length) {\n            milestonesList.unshift(DEFAULT_MILESTONE);\n        }\n        let issuesObj = DEFAULT_ISSUES_OBJ;\n        if (repository && repository.issues) {\n            issuesObj = repository.issues;\n        }\n        return {\n            loading,\n            labelsMap,\n            milestonesMap,\n            milestonesList,\n            issuesList: issuesObj.nodes.map(id => issuesMap[id]),\n            pageInfo: issuesObj.pageInfo,\n            totalCount: issuesObj.totalCount,\n        }\n    }\n)\n\nexport default connect(mapState)(IndexPage);\n","import React, { Component } from 'react';\nimport marked from 'marked';\nimport styles from './style.module.scss';\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/github-gist.css';\n\nmarked.setOptions({\n    breaks: true,\n    highlight: (code) => {\n        return hljs.highlightAuto(code).value;\n    }\n})\n\nclass MarkdownPreviewer extends Component {\n    handleInput = (e) => {\n        const { onChange } = this.props;\n        const value = this.editor.value;\n        e.preventDefault();\n        typeof onChange === 'function' && onChange(value);\n        this.preview.innerHTML = marked(value);\n    }\n\n    componentDidMount() {\n        const { defaultValue } = this.props;\n        if (defaultValue) {\n            this.preview.innerHTML = marked(defaultValue);\n        }\n    }\n\n    render() {\n        const { defaultValue } = this.props;\n        return (\n            <div className={styles.markdownPreviewer}>\n                <textarea\n                    id=\"editor\"\n                    spellCheck=\"false\"\n                    ref={textarea => this.editor = textarea}\n                    onInput={this.handleInput}\n                    defaultValue={defaultValue}\n                ></textarea>\n                <section\n                    id=\"preview\"\n                    ref={section => this.preview = section}\n                ></section>\n            </div>\n        );\n    }\n}\n\nexport default MarkdownPreviewer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport MarkdownPreviewer from '../../components/MarkdownPreviewer';\nimport styles from './style.module.scss';\n\nclass EditorPage extends Component {\n    handleChange = (value) => {\n        \n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { dispatch } = this.props;\n        if (this.title && this.body) {\n            dispatch.issues.create({\n                title: this.title.value,\n                body: this.body.value,\n            })\n        }\n    }\n\n    render() {\n        return (\n        <div className={styles.editorContainer}>\n            <header className={styles.header}>\n                <h2>文章编辑页</h2>\n            </header>\n            <main>\n                <form>\n                    <label className={styles.fileds} htmlFor=\"title\">标题：<input ref={input => this.title = input} type=\"text\" id=\"title\" /></label>\n                    <label className={classNames(styles.fileds, styles.editorContent)} htmlFor=\"editor\">内容：\n                        <MarkdownPreviewer onChange={this.handleChange} />\n                    </label>\n                    <label className={styles.fileds} htmlFor=\"milestone\">\n                        分类：\n                        <label className={styles.checkLabel}><input type=\"radio\" name=\"分类\" value=\"a\"/>分类1</label>\n                        <label className={styles.checkLabel}><input type=\"radio\" name=\"分类\" value=\"b\"/>分类2</label>\n                        <label className={styles.checkLabel}><input type=\"radio\" name=\"分类\" value=\"c\"/>分类3</label>\n                    </label>\n                    <label className={styles.fileds} htmlFor=\"labels\">\n                        标签：\n                        <label className={styles.checkLabel}><input type=\"checkbox\" name=\"标签1\" value=\"a\"/>标签1</label>\n                        <label className={styles.checkLabel}><input type=\"checkbox\" name=\"标签2\" value=\"b\"/>标签2</label>\n                        <label className={styles.checkLabel}><input type=\"checkbox\" name=\"标签3\" value=\"c\"/>标签3</label>\n                    </label>\n                    <input className={styles.submitButton} onClick={this.handleSubmit} type=\"submit\" value=\"创建\" />\n                </form>\n            </main>\n            <footer>\n                <p>Copyright ©{new Date().getFullYear()} Roy Zhi</p>\n            </footer>\n        </div>\n        );\n    }\n}\n\nexport default connect()(EditorPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport { createSelector } from 'reselect';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport Loading from '../../components/Loading';\nimport { getLoginAuthLink } from '../../services/github';\nimport styles from './style.module.scss';\nimport githubIconUrl from './github.svg';\n\nclass ArticlePage extends Component {\n    componentDidMount() {\n        const { dispatch, match } = this.props;\n        const number = match.params.number;\n        dispatch.user.getAuthToken();\n        dispatch.repository.getSingleIssue(number);\n    }\n\n    componentWillUnmount() {\n        const { dispatch } = this.props;\n        dispatch.repository.closeCurrentIssue();\n    }\n\n    handleInput = (e) => {\n        e.preventDefault();\n        const { currentTarget } = e;\n        currentTarget.style.height = 'auto';\n        currentTarget.style.height = currentTarget.scrollTop + currentTarget.scrollHeight + 'px';\n    }\n\n    handleSubmitComment = (e) => {\n        e.preventDefault();\n        const content = this.comment.value;\n        if (content) {\n            const { dispatch, currentIssue } = this.props;\n            dispatch.user.addComment({id: currentIssue.id, content, callback: () => {\n                this.comment.value = '';\n            }});\n        }\n    }\n\n    render() {\n        const {\n            loading,\n            labelsMap,\n            commentsMap,\n            currentIssue,\n            milestonesMap,\n            viewer,\n            isUserLoading,\n        } = this.props;\n\n        return (\n            <Loading loading={loading}>\n                <div className={styles.container}>\n                    <header>\n                        <h1>{currentIssue.title}</h1>\n                        <p className={styles.articleInfo}>\n                            <span>\n                                <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n                                {moment(currentIssue.createdAt).format('YYYY-MM-DD')}\n                            </span>\n                            <span>\n                                <i className=\"fa fa-th-list\" aria-hidden=\"true\"></i>\n                                <span className={styles.articleCategory}>\n                                    {currentIssue.milestone && milestonesMap[currentIssue.milestone].title}\n                                </span>\n                            </span>\n                            <span>\n                                <i className=\"fa fa-tags\" aria-hidden=\"true\"></i>\n                                {currentIssue.labels && currentIssue.labels.nodes.map(id => {\n                                    const label = labelsMap[id]\n                                    return (\n                                        <span\n                                            key={label.id}\n                                            className={styles.articleLabel}\n                                            style={{\n                                                background: `#${label.color}`,\n                                            }}\n                                        >\n                                            {label.name}\n                                        </span>\n                                    )\n                                })}\n                            </span>\n                        </p>\n                    </header>\n                    <main>\n                        <article\n                            className={classNames(styles.articleBody, 'markdown-body')}\n                            dangerouslySetInnerHTML={{ __html: currentIssue.bodyHTML }}\n                        ></article>\n                        <div className={styles.issueCommentsContainer}>\n                            {currentIssue.comments && currentIssue.comments.nodes.map(id => {\n                                const comment = commentsMap[id];\n                                if (comment) {\n                                    const { author } = comment;\n                                    return (\n                                        <section key={comment.id} className={styles.issueComment}>\n                                            <a className={styles.commentorAvatar} href={author.url}>\n                                                <img src={author.avatarUrl} alt=\"This is commentor's avatar\" />\n                                            </a>\n                                            <p className={styles.issueCommentHeader}>\n                                                <a href={author.url}><em>{author.login}</em></a>\n                                                <span>{moment(comment.createdAt).format('YYYY-MM-DD HH:mm:ss')}</span>\n                                            </p>\n                                            <article\n                                                className={classNames(styles.issueCommentContent, 'markdown-body')}\n                                                dangerouslySetInnerHTML={{ __html: comment.bodyHTML}}\n                                            ></article>\n                                        </section>\n                                    );\n                                } else {\n                                    return null;\n                                }\n                            })}\n                            <section className={styles.createCommentContainer}>\n                                <div className={styles.createComment} >\n                                    {viewer.id ?\n                                        (<div className={styles.createCommentAvatar}>\n                                            <img src={viewer.avatarUrl} alt=\"This is commentor's avatar\" />\n                                        </div>) :\n                                        (<a\n                                            className={styles.createCommentAvatar}\n                                            href={getLoginAuthLink()}\n                                        >\n                                            {isUserLoading ? \n                                                <i class=\"fa fa-circle-o-notch fa-spin fa-3x fa-fw\"></i>\n                                                :\n                                                <img src={githubIconUrl} alt=\"This is commentor's avatar\" />\n                                            }\n                                        </a>)\n                                    }\n                                    <div className={styles.createCommentHeader}>\n                                        <span className={classNames(styles.commentSwitch, styles.active)} >编辑</span>\n                                        <span className={styles.commentSwitch} >预览</span>\n                                        {(!viewer.id && !isUserLoading) && (\n                                            <span className={styles.commentorLogin} >通过GitHub<a href={getLoginAuthLink()}>登陆</a></span>\n                                        )}\n                                    </div>\n                                    <div className={styles.createCommentInputContainer}>\n                                        <textarea ref={textarea => this.comment = textarea} onInput={this.handleInput} className={styles.createCommentTextarea} placeholder=\"请编辑您的评论\"></textarea>\n                                    </div>\n                                    <div className={styles.createCommentOperator}>\n                                        <button onClick={this.handleSubmitComment} >评论</button>\n                                    </div>\n                                </div>\n                            </section>\n                        </div>\n                    </main>\n                </div>\n            </Loading>\n        );\n    }\n}\n\nconst mapState = createSelector(\n    [\n        store => store.repository.result,\n        store => store.repository.loading,\n        store => store.entities.repositories,\n        store => store.entities.issues,\n        store => store.entities.milestones,\n        store => store.entities.labels,\n        store => store.entities.comments,\n        store => store.user.viewer,\n        store => store.user.loading,\n    ],\n    (\n        result,\n        loading,\n        repositoriesMap,\n        issuesMap,\n        milestonesMap,\n        labelsMap,\n        commentsMap,\n        viewer,\n        isUserLoading,\n    ) => {\n        let issueID, currentIssue = {};\n        const repository = repositoriesMap[result];\n        if (repository) {\n            issueID = repository.issue;\n        }\n        if (issueID) {\n            currentIssue = issuesMap[issueID];\n        }\n        return {\n            loading,\n            currentIssue,\n            milestonesMap,\n            labelsMap,\n            commentsMap,\n            viewer,\n            isUserLoading,\n        };\n    }\n)\n\n\nexport default  connect(mapState)(withRouter(ArticlePage));","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport IndexPage from './Index';\nimport EditorPage from './Editor';\nimport ArticlePage from './Article';\n\nconst routerConfig = [\n    {\n        path: '/',\n        exact: true,\n        component: IndexPage,\n    },\n    {\n        path: '/editor',\n        exact: true,\n        component: EditorPage,\n    },\n    {\n        path: '/article/:number',\n        exact: true,\n        component: ArticlePage,\n    }\n];\n\nconst App = () => {\n    return (\n        <Router>\n            <Switch>\n                {routerConfig.map(route =>\n                    (<Route\n                        key={route.path}\n                        path={route.path}\n                        exact={route.exact}\n                        component={route.component}\n                    />)\n                )}\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { init } from '@rematch/core';\nimport { Provider } from 'react-redux';\nimport models from './models/index';\nimport * as serviceWorker from './services/serviceWorker';\nimport App from './pages/App';\nimport './styles/index.scss';\n\nexport const store = init({\n    models,\n}) \n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editorContainer\":\"style_editorContainer__1Wmff\",\"header\":\"style_header__1BwOO\",\"fileds\":\"style_fileds__3fShH\",\"checkLabel\":\"style_checkLabel__23t6_\",\"submitButton\":\"style_submitButton__18BxS\",\"editorContent\":\"style_editorContent__KEm5X\"};"],"sourceRoot":""}