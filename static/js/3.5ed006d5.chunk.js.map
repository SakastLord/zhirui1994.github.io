{"version":3,"sources":["components/MarkdownPreviewer/style.module.scss","pages/Editor/style.module.scss","components/MarkdownPreviewer/index.js","pages/Editor/index.js"],"names":["module","exports","markdownPreviewer","editorContainer","header","fileds","checkLabel","submitButton","editorContent","marked","setOptions","breaks","highlight","code","hljs","highlightAuto","value","MarkdownPreviewer","handleInput","e","onChange","_this","props","editor","preventDefault","preview","innerHTML","defaultValue","this","_this2","react_default","a","createElement","className","styles","id","spellCheck","ref","textarea","onInput","section","Component","EditorPage","content","title","milestone","labels","handleChange","handleRadioChange","stopPropagation","input","target","checked","handleCheckboxChange","idx","indexOf","push","splice","handleSubmit","_this$props","dispatch","currentRepositoryId","repository","createIssue","body","repositoryId","_this$props2","labelsList","milestonesList","length","initEditor","_this$props3","htmlFor","type","classNames","components_MarkdownPreviewer","map","key","name","label","concat","onClick","Date","getFullYear","mapState","createSelector","store","result","loading","entities","repositories","milestones","repositoriesMap","labelsMap","milestonesMap","currentRepository","nodes","connect"],"mappings":"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","file":"static/js/3.5ed006d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"markdownPreviewer\":\"style_markdownPreviewer__1aG82\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editorContainer\":\"style_editorContainer__2CpJ4\",\"header\":\"style_header__b0b1a\",\"fileds\":\"style_fileds__3fJcb\",\"checkLabel\":\"style_checkLabel__3_j0j\",\"submitButton\":\"style_submitButton__1urt6\",\"editorContent\":\"style_editorContent__1vN33\"};","import React, { Component } from 'react';\nimport marked from 'marked';\nimport styles from './style.module.scss';\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/github-gist.css';\n\nmarked.setOptions({\n    breaks: true,\n    highlight: (code) => {\n        return hljs.highlightAuto(code).value;\n    }\n})\n\nclass MarkdownPreviewer extends Component {\n    handleInput = (e) => {\n        const { onChange } = this.props;\n        const value = this.editor.value;\n        e.preventDefault();\n        typeof onChange === 'function' && onChange(value);\n        this.preview.innerHTML = marked(value);\n    }\n\n    componentDidMount() {\n        const { defaultValue } = this.props;\n        if (defaultValue) {\n            this.preview.innerHTML = marked(defaultValue);\n        }\n    }\n\n    render() {\n        const { defaultValue } = this.props;\n        return (\n            <div className={styles.markdownPreviewer}>\n                <textarea\n                    id=\"editor\"\n                    spellCheck=\"false\"\n                    ref={textarea => this.editor = textarea}\n                    onInput={this.handleInput}\n                    defaultValue={defaultValue}\n                ></textarea>\n                <section\n                    id=\"preview\"\n                    ref={section => this.preview = section}\n                ></section>\n            </div>\n        );\n    }\n}\n\nexport default MarkdownPreviewer;\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport MarkdownPreviewer from '../../components/MarkdownPreviewer';\nimport styles from './style.module.scss';\n\nclass EditorPage extends Component {\n    content = '';\n    title = '';\n    milestone = '';\n    labels = [];\n\n    componentDidMount() {\n        const { labelsList, milestonesList, dispatch } = this.props;\n        if (!labelsList.length || !milestonesList.length) {\n            dispatch.repository.initEditor();\n        }\n    }\n\n    handleChange = (value) => {\n        this.content = value;\n    }\n\n    handleRadioChange = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const input = e.target;\n        if (input.checked) {\n            this.milestone = input.value;\n        } else {\n            this.milestone = '';\n        }\n    }\n\n    handleCheckboxChange = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const input = e.target;\n        const idx = this.labels.indexOf(input.value);\n        if (input.checked) {\n            if (idx === -1) {\n                this.labels.push(input.value);\n            }\n        } else {\n            if (idx !== -1) {\n                this.labels.splice(idx, 1);\n            }\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { dispatch, currentRepositoryId } = this.props;\n        if (this.title && this.content) {\n            dispatch.repository.createIssue({\n                title: this.title.value,\n                body: this.content,\n                labels: this.labels,\n                milestone: this.milestone,\n                repositoryId: currentRepositoryId,\n            })\n        }\n    }\n\n    render() {\n        const { labelsList, milestonesList } = this.props;\n        return (\n        <div className={styles.editorContainer}>\n            <header className={styles.header}>\n                <h2>文章编辑页</h2>\n            </header>\n            <main>\n                <form>\n                    <label className={styles.fileds} htmlFor=\"title\">标题：<input ref={input => this.title = input} type=\"text\" id=\"title\" /></label>\n                    <label className={classNames(styles.fileds, styles.editorContent)} htmlFor=\"editor\">内容：\n                        <MarkdownPreviewer onChange={this.handleChange} />\n                    </label>\n                    <label className={styles.fileds} htmlFor=\"milestone\">\n                        分类：\n                        {milestonesList.map(milestone => {\n                            return (\n                                <label key={milestone.id} className={styles.checkLabel}>\n                                    <input onChange={this.handleRadioChange} type=\"radio\" name=\"categories\" value={milestone.id} />\n                                    {milestone.title}\n                                </label>\n                            );\n                        })}\n                    </label>\n                    <label className={styles.fileds} htmlFor=\"labels\">\n                        标签：\n                        {labelsList.map(label => {\n                            return (\n                                <label key={label.id} className={styles.checkLabel}>\n                                    <input onChange={this.handleCheckboxChange} type=\"checkbox\" name={`label-${label.name}`} value={label.id}/>\n                                    {label.name}\n                                </label>\n                            );\n                        })}\n                    </label>\n                    <input className={styles.submitButton} onClick={this.handleSubmit} type=\"submit\" value=\"创建\" />\n                </form>\n            </main>\n            <footer>\n                <p>Copyright ©{new Date().getFullYear()} Roy Zhi</p>\n            </footer>\n        </div>\n        );\n    }\n}\n\nconst mapState = createSelector(\n    [\n        store => store.repository.result,\n        store => store.repository.loading,\n        store => store.entities.repositories,\n        store => store.entities.labels,\n        store => store.entities.milestones,\n    ],\n    (\n        result,\n        loading,\n        repositoriesMap,\n        labelsMap,\n        milestonesMap\n    ) => {\n        let labelsList = [], milestonesList = [];\n        const currentRepositoryId = result;\n        const currentRepository = repositoriesMap[result];\n        if (\n            currentRepository &&\n            currentRepository.labels &&\n            currentRepository.labels.nodes &&\n            currentRepository.milestones &&\n            currentRepository.milestones.nodes\n        ) {\n            labelsList = currentRepository.labels.nodes.map(id => labelsMap[id]);\n            milestonesList = currentRepository.milestones.nodes.map(id => milestonesMap[id]);\n        }\n        return {\n            loading,\n            labelsList,\n            milestonesList,\n            currentRepositoryId,\n        }\n    }\n)\n\nexport default connect(mapState)(EditorPage);\n"],"sourceRoot":""}