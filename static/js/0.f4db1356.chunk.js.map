{"version":3,"sources":["components/MarkdownPreviewer/style.module.scss","pages/Editor/style.module.scss","components/MarkdownPreviewer/index.js","pages/Editor/index.js"],"names":["module","exports","markdownPreviewer","editorContainer","header","titleInput","fileds","checkLabel","submitButton","editorContent","marked","setOptions","breaks","highlight","code","hljs","highlightAuto","value","MarkdownPreviewer","handleInput","e","onChange","_this","props","editor","preventDefault","preview","innerHTML","defaultValue","this","_this2","react_default","a","createElement","className","styles","id","spellCheck","ref","textarea","onInput","section","Component","EditorPage","state","title","body","milestone","labels","handleChange","setState","handleRadioClick","input","stopPropagation","target","tagName","querySelector","handleCheckboxClick","idx","indexOf","splice","Object","toConsumableArray","push","handleSubmit","dispatch","_this$state","params","callback","url","history","number","repository","editIssue","objectSpread","createIssue","_this$props","labelsList","milestonesList","length","initEditor","_this$props2","loading","Loading","htmlFor","type","classNames","components_MarkdownPreviewer","map","key","onClick","name","checked","label","concat","Date","getFullYear","memoize","match","currentIssue","milestonesMap","labelsMap","prevCurrentIssue","nodes","PureComponent","mapState","createSelector","store","result","entities","repositories","milestones","issues","repositoriesMap","issuesMap","currentRepository","currentIssueId","issue","connect","withRouter"],"mappings":"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","file":"static/js/0.f4db1356.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"markdownPreviewer\":\"style_markdownPreviewer__2WsNP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editorContainer\":\"style_editorContainer__1Wmff\",\"header\":\"style_header__1BwOO\",\"titleInput\":\"style_titleInput__3EojG\",\"fileds\":\"style_fileds__3fShH\",\"checkLabel\":\"style_checkLabel__23t6_\",\"submitButton\":\"style_submitButton__18BxS\",\"editorContent\":\"style_editorContent__KEm5X\"};","import React, { Component } from 'react';\nimport marked from 'marked';\nimport styles from './style.module.scss';\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/github-gist.css';\n\nmarked.setOptions({\n    breaks: true,\n    highlight: (code) => {\n        return hljs.highlightAuto(code).value;\n    }\n})\n\nclass MarkdownPreviewer extends Component {\n    handleInput = (e) => {\n        const { onChange } = this.props;\n        const value = this.editor.value;\n        e.preventDefault();\n        typeof onChange === 'function' && onChange(value);\n        this.preview.innerHTML = marked(value);\n    }\n\n    componentDidMount() {\n        const { defaultValue } = this.props;\n        if (defaultValue) {\n            this.preview.innerHTML = marked(defaultValue);\n        }\n    }\n\n    render() {\n        const { defaultValue } = this.props;\n        return (\n            <div className={styles.markdownPreviewer}>\n                <textarea\n                    id=\"editor\"\n                    spellCheck=\"false\"\n                    ref={textarea => this.editor = textarea}\n                    onInput={this.handleInput}\n                    defaultValue={defaultValue}\n                ></textarea>\n                <section\n                    id=\"preview\"\n                    ref={section => this.preview = section}\n                ></section>\n            </div>\n        );\n    }\n}\n\nexport default MarkdownPreviewer;\n","import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport memoize from 'memoize-one';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport MarkdownPreviewer from '../../components/MarkdownPreviewer';\nimport Loading from '../../components/Loading';\nimport styles from './style.module.scss';\n\nclass EditorPage extends PureComponent {\n    state = {\n        title: '',\n        body: '',\n        milestone: void(0),\n        labels: [],\n    }\n\n    get number() {\n        return memoize(\n            (match) => match.params.number\n        )(this.props.match);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { match, currentIssue, milestonesMap, labelsMap } = props;\n        const { prevCurrentIssue } = state;\n        const number = match.params.number;\n        if (\n            number &&\n            currentIssue &&\n            currentIssue.number === +number &&\n            currentIssue !== prevCurrentIssue\n        ) {\n            const title = currentIssue.title || '';\n            const body = currentIssue.body || '';\n            const milestone = milestonesMap[currentIssue.milestone].number || '';\n            const labels = (currentIssue.labels\n                && currentIssue.labels.nodes\n                && currentIssue.labels.nodes.map(id => {\n                    return labelsMap[id].name;\n                })) || [];\n\n            return {\n                prevCurrentIssue: currentIssue,\n                title,\n                body,\n                milestone,\n                labels,\n            }\n        } else {\n            return null;\n        }\n    }\n\n    componentDidMount() {\n        const { labelsList, milestonesList, dispatch } = this.props;\n        const number = this.number;\n        if (!labelsList.length || !milestonesList.length) {\n            dispatch.repository.initEditor(number);\n        }\n    }\n\n    handleChange = (value) => {\n        this.setState({\n            body: value,\n        });\n    }\n\n    handleRadioClick = (e) => {\n        e.stopPropagation();\n        let input;\n        if (e.target.tagName === 'LABEL') {\n            e.preventDefault();\n            input = e.target.querySelector('input');\n        } else if (e.target.tagName === 'INPUT') {\n            input = e.target;\n        }\n        if (input) {\n            const value = +input.value;\n            if (this.state.milestone === value) {\n                this.setState({\n                    milestone: void(0),\n                });\n            } else {\n                this.setState({\n                    milestone: value,\n                });\n            }\n        }\n        return false;\n    }\n\n    handleCheckboxClick = (e) => {\n        e.stopPropagation();\n        let input;\n        if (e.target.tagName === 'LABEL') {\n            e.preventDefault();\n            input = e.target.querySelector('input');\n        } else if (e.target.tagName === 'INPUT') {\n            input = e.target;\n        }\n        if (input) {\n            const labels = this.state.labels;\n            const value = input.value;\n            const idx = labels.indexOf(value);\n            if (idx !== -1) {\n                labels.splice(idx, 1);\n                this.setState({\n                    labels: [...labels],\n                });\n            } else {\n                labels.push(value);\n                this.setState({\n                    labels: [...labels],\n                });\n            }\n        }\n        return false;\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const { dispatch } = this.props;\n        const { title, body, milestone, labels } = this.state; \n        if (title && body && milestone && labels) {\n            const params = {\n                title,\n                body,\n                labels,\n                milestone,\n                callback: (url) => {\n                    this.props.history.push(url)\n                }\n            };\n            const number = this.number;\n            if (number) {\n                dispatch.repository.editIssue({\n                    ...params,\n                    number,\n                })\n            } else {\n                dispatch.repository.createIssue(params)\n            }\n        }\n    }\n\n    render() {\n        const { labelsList, milestonesList, loading } = this.props;\n        const number = this.number;\n        return (\n            <Loading loading={loading}>\n        <div className={styles.editorContainer}>\n            <header className={styles.header}>\n                <h2>文章编辑页</h2>\n            </header>\n            <main>\n                <form>\n                    <label className={styles.fileds} htmlFor=\"title\">标题：\n                        <input className={styles.titleInput} defaultValue={this.state.title} ref={input => this.title = input} type=\"text\" id=\"title\" />\n                    </label>\n                    <label className={classNames(styles.fileds, styles.editorContent)} htmlFor=\"editor\">内容：\n                        <MarkdownPreviewer\n                            defaultValue={this.state.body}\n                            onChange={this.handleChange}\n                        />\n                    </label>\n                    <label className={styles.fileds} htmlFor=\"milestone\">\n                        分类：\n                        {milestonesList.map(milestone => {\n                            return (\n                                <label\n                                    key={milestone.id}\n                                    className={styles.checkLabel}\n                                    onClick={this.handleRadioClick}\n                                >\n                                    <input\n                                        type=\"radio\"\n                                        name=\"categories\"\n                                        value={milestone.number}\n                                        checked={this.state.milestone === milestone.number}\n                                    />\n                                    {milestone.title}\n                                </label>\n                            );\n                        })}\n                    </label>\n                    <label className={styles.fileds} htmlFor=\"labels\">\n                        标签：\n                        {labelsList.map(label => {\n                            return (\n                                <label\n                                    key={label.id}\n                                    className={styles.checkLabel}\n                                    onClick={this.handleCheckboxClick}\n                                >\n                                    <input\n                                        type=\"checkbox\"\n                                        value={label.name}\n                                        name={`label-${label.name}`}\n                                        checked={this.state.labels.indexOf(label.name) !== -1}\n                                    />\n                                    {label.name}\n                                </label>\n                            );\n                        })}\n                    </label>\n                    <input\n                        type=\"submit\"\n                        value={number ? \"修改\" : \"创建\"}\n                        className={styles.submitButton}\n                        onClick={this.handleSubmit}\n                    />\n                </form>\n            </main>\n            <footer>\n                <p>Copyright ©{new Date().getFullYear()} Roy Zhi</p>\n            </footer>\n        </div>\n        </Loading>\n        );\n    }\n}\n\nconst mapState = createSelector(\n    [\n        store => store.repository.result,\n        store => store.repository.loading,\n        store => store.entities.repositories,\n        store => store.entities.labels,\n        store => store.entities.milestones,\n        store => store.entities.issues,\n    ],\n    (\n        result,\n        loading,\n        repositoriesMap,\n        labelsMap,\n        milestonesMap,\n        issuesMap\n    ) => {\n        let labelsList = [], milestonesList = [], currentIssue;\n        const currentRepository = repositoriesMap[result];\n        if (\n            currentRepository &&\n            currentRepository.labels &&\n            currentRepository.labels.nodes &&\n            currentRepository.milestones &&\n            currentRepository.milestones.nodes\n        ) {\n            labelsList = currentRepository.labels.nodes.map(id => labelsMap[id]);\n            milestonesList = currentRepository.milestones.nodes.map(id => milestonesMap[id]);\n            const currentIssueId = currentRepository.issue;\n            if (currentIssueId) {\n                currentIssue = issuesMap[currentIssueId]\n            }\n        }\n        return {\n            loading,\n            labelsMap,\n            labelsList,\n            milestonesMap,\n            milestonesList,\n            currentIssue,\n        }\n    }\n)\n\nexport default connect(mapState)(withRouter(EditorPage));\n"],"sourceRoot":""}